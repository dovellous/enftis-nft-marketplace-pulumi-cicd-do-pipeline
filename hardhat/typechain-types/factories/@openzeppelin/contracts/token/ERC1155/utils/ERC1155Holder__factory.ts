/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  ERC1155Holder,
  ERC1155HolderInterface,
} from "../../../../../../@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506103a38061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806301ffc9a714610043578063bc197c811461006b578063f23a6e61146100a3575b5f80fd5b6100566100513660046100f8565b6100c2565b60405190151581526020015b60405180910390f35b61008a61007936600461026c565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610062565b61008a6100b136600461030e565b63f23a6e6160e01b95945050505050565b5f6001600160e01b03198216630271189760e51b14806100f257506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f60208284031215610108575f80fd5b81356001600160e01b03198116811461011f575f80fd5b9392505050565b80356001600160a01b038116811461013c575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561017d5761017d610141565b604052919050565b5f82601f830112610194575f80fd5b813560206001600160401b038211156101af576101af610141565b8160051b6101be828201610155565b92835284810182019282810190878511156101d7575f80fd5b83870192505b848310156101f6578235825291830191908301906101dd565b979650505050505050565b5f82601f830112610210575f80fd5b81356001600160401b0381111561022957610229610141565b61023c601f8201601f1916602001610155565b818152846020838601011115610250575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215610280575f80fd5b61028986610126565b945061029760208701610126565b935060408601356001600160401b03808211156102b2575f80fd5b6102be89838a01610185565b945060608801359150808211156102d3575f80fd5b6102df89838a01610185565b935060808801359150808211156102f4575f80fd5b5061030188828901610201565b9150509295509295909350565b5f805f805f60a08688031215610322575f80fd5b61032b86610126565b945061033960208701610126565b9350604086013592506060860135915060808601356001600160401b03811115610361575f80fd5b6103018882890161020156fea2646970667358221220fa4aaf1e5abc8169e1805f150d4be408a283493701d69f9f122f1cc7f844b73064736f6c63430008140033";

type ERC1155HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Holder__factory extends ContractFactory {
  constructor(...args: ERC1155HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC1155Holder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Holder__factory {
    return super.connect(runner) as ERC1155Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderInterface {
    return new Interface(_abi) as ERC1155HolderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Holder {
    return new Contract(address, _abi, runner) as unknown as ERC1155Holder;
  }
}
