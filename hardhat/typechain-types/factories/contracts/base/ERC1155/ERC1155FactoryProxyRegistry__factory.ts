/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155FactoryProxyRegistry,
  ERC1155FactoryProxyRegistryInterface,
} from "../../../../contracts/base/ERC1155/ERC1155FactoryProxyRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "proxies",
    outputs: [
      {
        internalType: "contract OwnableDelegateProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060d38061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063c455279114602d575b600080fd5b60536038366004606f565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600060208284031215608057600080fd5b81356001600160a01b0381168114609657600080fd5b939250505056fea2646970667358221220645446288b003ba9f2a64edab1b5d36c87c4942becaf8a4799ebcd0e0a81bca364736f6c63430008130033";

type ERC1155FactoryProxyRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FactoryProxyRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155FactoryProxyRegistry__factory extends ContractFactory {
  constructor(...args: ERC1155FactoryProxyRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155FactoryProxyRegistry> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155FactoryProxyRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155FactoryProxyRegistry {
    return super.attach(address) as ERC1155FactoryProxyRegistry;
  }
  override connect(signer: Signer): ERC1155FactoryProxyRegistry__factory {
    return super.connect(signer) as ERC1155FactoryProxyRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FactoryProxyRegistryInterface {
    return new utils.Interface(_abi) as ERC1155FactoryProxyRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155FactoryProxyRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155FactoryProxyRegistry;
  }
}
