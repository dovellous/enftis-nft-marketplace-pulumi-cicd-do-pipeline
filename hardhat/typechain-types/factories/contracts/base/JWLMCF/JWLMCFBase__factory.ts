/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  JWLMCFBase,
  JWLMCFBaseInterface,
} from "../../../../contracts/base/JWLMCF/JWLMCFBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IJWLX",
        name: "_jwlx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_developerTreasuryWalletAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_jouelTokenRewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_multiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolLastRewardBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerSare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userPendingReward",
        type: "uint256",
      },
    ],
    name: "PendingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IJWLX",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "autoCompound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_developerTreasuryWalletAccount",
        type: "address",
      },
    ],
    name: "changeDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IJWLX",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "checkPoolDuplicate",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "developerTreasuryWalletAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardTokenPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPools",
    outputs: [
      {
        components: [
          {
            internalType: "contract IJWLX",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardTokenPerShare",
            type: "uint256",
          },
        ],
        internalType: "struct JWLMCFBase.PoolInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jouelTokenRewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jwlx",
    outputs: [
      {
        internalType: "contract IJWLX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IJWLX",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardTokenPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    name: "updateStartBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b5060405162001b6038038062001b608339810160408190526200003991620001fb565b33806200006057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006b8162000192565b506001808055600280546001600160a01b039889166001600160a01b0319918216811790925560038054988a16988216989098179097556004958655600885905560099390935560408051608081018252938452602084018381529084019485526000606085018181526005805494850181559091529351919095027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08101805492909816919096161790955591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2830155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3909101556007556200025e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620001f857600080fd5b50565b60008060008060008060c087890312156200021557600080fd5b86516200022281620001e2565b60208801519096506200023581620001e2565b6040880151606089015160808a015160a0909a0151989b929a5090989097909650945092505050565b6118f2806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806379203dc4116100f957806393f1a40b11610097578063b1e646cc11610071578063b1e646cc146103ce578063f2fde38b146103d7578063fa2a5452146103ea578063fac2b9ba146103fd57600080fd5b806393f1a40b1461036157806398969e82146103a85780639e2c8a5b146103bb57600080fd5b806388a8c95c116100d357806388a8c95c146103215780638aa28550146103345780638da5cb5b1461033d5780638dbb1e3a1461034e57600080fd5b806379203dc4146102fd5780637b0472f014610306578063821c05761461031957600080fd5b806351eb05a611610166578063630b5ba111610140578063630b5ba1146102c557806364482f79146102cd578063673a2a1f146102e0578063715018a6146102f557600080fd5b806351eb05a61461028c5780635312ea8e1461029f5780635ffe6146146102b257600080fd5b8063216e795b116101a2578063216e795b146102325780632f380b351461025d578063322d0d4a1461027057806348cd4cb11461028357600080fd5b8063081e3eda146101c95780631526fe27146101e05780631eaaa0451461021d575b600080fd5b6005545b6040519081526020015b60405180910390f35b6101f36101ee366004611685565b610410565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101d7565b61023061022b3660046116c8565b610454565b005b600354610245906001600160a01b031681565b6040516001600160a01b0390911681526020016101d7565b6101f361026b366004611685565b61059e565b61023061027e366004611706565b610653565b6101cd60085481565b61023061029a366004611685565b610703565b6102306102ad366004611685565b61096a565b6102306102c0366004611685565b610a68565b610230610a75565b6102306102db36600461172a565b610a94565b6102e8610b1b565b6040516101d79190611756565b610230610ba5565b6101cd60075481565b6102306103143660046117c3565b610bb9565b610230610d73565b61023061032f366004611706565b610e30565b6101cd60095481565b6000546001600160a01b0316610245565b6101cd61035c3660046117c3565b610eb9565b61039361036f3660046117e5565b60066020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101d7565b6101cd6103b63660046117e5565b610ed1565b6102306103c93660046117c3565b6110b4565b6101cd60045481565b6102306103e5366004611706565b6112a7565b600254610245906001600160a01b031681565b61023061040b366004611685565b6112e5565b6005818154811061042057600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b61045c6112f2565b801561046a5761046a610a75565b61047382610653565b6000600854431161048657600854610488565b435b90506104966007548561131f565b600755604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260058054600181018255925293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06004909202918201805473ffffffffffffffffffffffffffffffffffffffff1916919094161790925592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db182015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2830155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db390910155610598611347565b50505050565b600080600080600585815481106105b7576105b7611815565b6000918252602090912060049091020154600580546001600160a01b0390921691879081106105e8576105e8611815565b9060005260206000209060040201600101546005878154811061060d5761060d611815565b9060005260206000209060040201600201546005888154811061063257610632611815565b90600052602060002090600402016003015493509350935093509193509193565b60055460005b818110156106fe57826001600160a01b03166005828154811061067e5761067e611815565b60009182526020909120600490910201546001600160a01b0316036106f65760405162461bcd60e51b815260206004820152602360248201527f4c49515549444954595f504f4f4c5f544f4b454e5f414c52454144595f45584960448201526253545360e81b60648201526084015b60405180910390fd5b600101610659565b505050565b600554819081106107485760405162461bcd60e51b815260206004820152600f60248201526e1253959053125117d413d3d317d251608a1b60448201526064016106ed565b60006005838154811061075d5761075d611815565b906000526020600020906004020190508060020154431161077d57505050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016020604051808303816000875af11580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb919061182b565b9050806000036108015750436002909101555050565b6000610811836002015443610eb9565b9050600061083360045483610826919061185a565b856001015460075461140b565b6002546003549192506001600160a01b03908116916340c10f19911661085a84600a61144e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b50506002546040516340c10f1960e01b81526001600160a01b03909116600482018190526024820185905292506340c10f199150604401600060405180830381600087803b15801561091d57600080fd5b505af1158015610931573d6000803e3d6000fd5b5050506003850154610953915061094d8364e8d4a5100061185a565b8561145e565b6003850155505043600290920191909155505b5050565b60006005828154811061097f5761097f611815565b6000918252602080832085845260068252604080852033808752935293849020600493840290910180548254955163423f6cef60e01b81529485019390935260248401949094529293506001600160a01b03169063423f6cef906044016020604051808303816000875af11580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f919061182b565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b610a706112f2565b600955565b60055460005b8181101561096657610a8c81610703565b600101610a7b565b610a9c6112f2565b8015610aaa57610aaa610a75565b600060058481548110610abf57610abf611815565b90600052602060002090600402016001015490508260058581548110610ae757610ae7611815565b90600052602060002090600402016001018190555082811461059857610b10600754828561146e565b600755610598611347565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610b9c576000848152602090819020604080516080810182526004860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003015460608301529083529092019101610b3f565b50505050905090565b610bad6112f2565b610bb76000611495565b565b60055482908110610bfe5760405162461bcd60e51b815260206004820152600f60248201526e1253959053125117d413d3d317d251608a1b60448201526064016106ed565b600060058481548110610c1357610c13611815565b60009182526020808320878452600682526040808520338652909252922060049091029091019150610c4485610703565b805415610c88576000610c74826000015464e8d4a510008560030154610c6a9190611887565b84600101546114f2565b90508015610c8657610c863382611519565b505b8315610d185781546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d08919061182b565b508054610d15908561131f565b81555b610d308160000154836003015464e8d4a5100061140b565b6001820155604051848152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a35050505050565b60006005600081548110610d8957610d89611815565b600091825260208083203384527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f890915260408320600490920201925090610dd090610703565b805415610e0f576000610df6826000015464e8d4a510008560030154610c6a9190611887565b90508015610e0d578154610e0a908261131f565b82555b505b610e278160000154836003015464e8d4a5100061140b565b60019091015550565b6003546001600160a01b03163314610e8a5760405162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016106ed565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000610ec88284600954611583565b90505b92915050565b60008060058481548110610ee757610ee7611815565b600091825260208083208784526006825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a08231906024016020604051808303816000875af1158015610f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f89919061182b565b9050836002015443118015610f9d57508015155b15610ff4576000610fb2856002015443610eb9565b90506000610fd460045483610fc7919061185a565b876001015460075461140b565b9050610fef610fe88264e8d4a5100061185a565b84866115aa565b935050505b825460009061102190611008600a86611887565b6110179064e8d4a5100061185a565b86600101546114f2565b90507ebf2ba5338a691e76bab6fdf53e717307fa196b983021e9caff964c15d3561843866002015484848860000154600a8961105d9190611887565b61106c9064e8d4a5100061185a565b60018b0154604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e00160405180910390a1979650505050505050565b600554829081106110f95760405162461bcd60e51b815260206004820152600f60248201526e1253959053125117d413d3d317d251608a1b60448201526064016106ed565b60006005848154811061110e5761110e611815565b6000918252602080832087845260068252604080852033865290925292208054600490920290920192508411156111875760405162461bcd60e51b815260206004820152601260248201527f494e53554646494349454e545f46554e4453000000000000000000000000000060448201526064016106ed565b61119085610703565b60006111af826000015464e8d4a510008560030154610c6a9190611887565b905080156111c1576111c13382611519565b841561124b5781546111d390866115ba565b8255825460405163423f6cef60e01b8152336004820152602481018790526001600160a01b039091169063423f6cef906044016020604051808303816000875af1158015611225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611249919061182b565b505b6112638260000154846003015464e8d4a5100061140b565b6001830155604051858152869033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a3505050505050565b6112af6112f2565b6001600160a01b0381166112d957604051631e4fbdf760e01b8152600060048201526024016106ed565b6112e281611495565b50565b6112ed6112f2565b600855565b6000546001600160a01b03163314610bb75760405163118cdaa760e01b81523360048201526024016106ed565b60008060008061132f86866115ca565b91509150811561133d578092505b5090949350505050565b600554600060015b82811015611391576005818154811061136a5761136a611815565b9060005260206000209060040201600101548261138791906118a9565b915060010161134f565b508015610966576113a3600382611887565b90506113d760075460056000815481106113bf576113bf611815565b9060005260206000209060040201600101548361146e565b6007819055508060056000815481106113f2576113f2611815565b9060005260206000209060040201600101819055505050565b60008060008061141b87876115f3565b915091508115611443576000806114328388611630565b915091508115611440578094505b50505b509095945050505050565b60008060008061132f8686611630565b60008060008061141b87876115ca565b60008060008061147e8787611663565b9150915081156114435760008061143283886115ca565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008061150287876115f3565b915091508115611443576000806114328388611663565b6002546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b15801561156757600080fd5b505af115801561157b573d6000803e3d6000fd5b505050505050565b6000806000806115938787611663565b9150915081156114435760008061143283886115f3565b60008060008061147e8787611630565b60008060008061132f8686611663565b600080838301848110156115e55760008092509250506115ec565b6001925090505b9250929050565b6000808360000361160a57506001905060006115ec565b8383028385828161161d5761161d611871565b04146115e55760008092509250506115ec565b60008082600003611646575060009050806115ec565b600183858161165757611657611871565b04915091509250929050565b60008083831115611679575060009050806115ec565b50600193919092039150565b60006020828403121561169757600080fd5b5035919050565b6001600160a01b03811681146112e257600080fd5b803580151581146116c357600080fd5b919050565b6000806000606084860312156116dd57600080fd5b8335925060208401356116ef8161169e565b91506116fd604085016116b3565b90509250925092565b60006020828403121561171857600080fd5b81356117238161169e565b9392505050565b60008060006060848603121561173f57600080fd5b83359250602084013591506116fd604085016116b3565b602080825282518282018190526000919060409081850190868401855b828110156117b657815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101611773565b5091979650505050505050565b600080604083850312156117d657600080fd5b50508035926020909101359150565b600080604083850312156117f857600080fd5b82359150602083013561180a8161169e565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561183d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ecb57610ecb611844565b634e487b7160e01b600052601260045260246000fd5b6000826118a457634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610ecb57610ecb61184456fea26469706673582212204be0964ee332822ec824d79f9174ac13480430f48c5955ac8532d983a4b00ee164736f6c63430008160033";

type JWLMCFBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JWLMCFBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JWLMCFBase__factory extends ContractFactory {
  constructor(...args: JWLMCFBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _jwlx: AddressLike,
    _developerTreasuryWalletAccount: AddressLike,
    _jouelTokenRewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _multiplier: BigNumberish,
    _allocPoint: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _jwlx,
      _developerTreasuryWalletAccount,
      _jouelTokenRewardPerBlock,
      _startBlock,
      _multiplier,
      _allocPoint,
      overrides || {}
    );
  }
  override deploy(
    _jwlx: AddressLike,
    _developerTreasuryWalletAccount: AddressLike,
    _jouelTokenRewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _multiplier: BigNumberish,
    _allocPoint: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _jwlx,
      _developerTreasuryWalletAccount,
      _jouelTokenRewardPerBlock,
      _startBlock,
      _multiplier,
      _allocPoint,
      overrides || {}
    ) as Promise<
      JWLMCFBase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JWLMCFBase__factory {
    return super.connect(runner) as JWLMCFBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JWLMCFBaseInterface {
    return new Interface(_abi) as JWLMCFBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): JWLMCFBase {
    return new Contract(address, _abi, runner) as unknown as JWLMCFBase;
  }
}
