/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  JWLMasterChef,
  JWLMasterChefInterface,
} from "../../../../contracts/base/JWLMCF/JWLMasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract N2DRewards",
        name: "_n2dr",
        type: "address",
      },
      {
        internalType: "contract N2DRPay",
        name: "_n2drpay",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dev",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_n2drPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_multiplier",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "autoCompound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dev",
        type: "address",
      },
    ],
    name: "changeDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "checkPoolDuplicate",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardTokenPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "n2dr",
    outputs: [
      {
        internalType: "contract N2DRewards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "n2drPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "n2drpay",
    outputs: [
      {
        internalType: "contract N2DRPay",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardTokenPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006008553480156200001657600080fd5b5060405162001b6138038062001b61833981016040819052620000399162000212565b33806200006057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006b81620001a9565b506001808055600280546001600160a01b03199081166001600160a01b03998a16908117909255600380548216988a16989098179097556004805488169689169690961786556005949094556009839055600a91909155604080516080810182529384526103e86020850181815291850193845260006060860181815260068054958601815590915294517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f939096029283018054909716959097169490941790945591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4084015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d429091015560085562000282565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200020f57600080fd5b50565b60008060008060008060c087890312156200022c57600080fd5b86516200023981620001f9565b60208801519096506200024c81620001f9565b60408801519095506200025f81620001f9565b80945050606087015192506080870151915060a087015190509295509295509295565b6118cf80620002926000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c8063715018a6116100f95780638dbb1e3a1161009757806398969e821161007157806398969e82146103a45780639e2c8a5b146103b7578063ab97303f146103ca578063f2fde38b146103dd57600080fd5b80638dbb1e3a1461033757806391cca3db1461034a57806393f1a40b1461035d57600080fd5b8063821c0576116100d3578063821c05761461030257806388a8c95c1461030a5780638aa285501461031d5780638da5cb5b1461032657600080fd5b8063715018a6146102de57806379203dc4146102e65780637b0472f0146102ef57600080fd5b806348cd4cb1116101665780635ffe6146116101405780635ffe6146146102a7578063630b5ba1146102ba57806364482f79146102c25780636d7f6101146102d557600080fd5b806348cd4cb11461027857806351eb05a6146102815780635312ea8e1461029457600080fd5b80631eaaa045116101975780631eaaa0451461023d5780632f380b3514610252578063322d0d4a1461026557600080fd5b8063081e3eda146101be5780630fe6b7b5146101d55780631526fe2714610200575b600080fd5b6006545b6040519081526020015b60405180910390f35b6002546101e8906001600160a01b031681565b6040516001600160a01b0390911681526020016101cc565b61021361020e36600461165f565b6103f0565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101cc565b61025061024b36600461169b565b610434565b005b61021361026036600461165f565b61057e565b6102506102733660046116dd565b610633565b6101c260095481565b61025061028f36600461165f565b6106e1565b6102506102a236600461165f565b610949565b6102506102b536600461165f565b6109eb565b6102506109f8565b6102506102d03660046116fa565b610a1f565b6101c260055481565b610250610aa6565b6101c260085481565b6102506102fd366004611728565b610aba565b610250610c1c565b6102506103183660046116dd565b610ce3565b6101c2600a5481565b6000546001600160a01b03166101e8565b6101c2610345366004611728565b610d6c565b6004546101e8906001600160a01b031681565b61038f61036b36600461174a565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101cc565b6101c26103b236600461174a565b610d84565b6102506103c5366004611728565b610eda565b6003546101e8906001600160a01b031681565b6102506103eb3660046116dd565b61106d565b6006818154811061040057600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b61043c6110ab565b801561044a5761044a6109f8565b61045382610633565b6000600954431161046657600954610468565b435b9050610476600854856110d8565b600855604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260068054600181018255925293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6004909202918201805473ffffffffffffffffffffffffffffffffffffffff1916919094161790925592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4082015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4290910155610578611100565b50505050565b600080600080600685815481106105975761059761177a565b6000918252602090912060049091020154600680546001600160a01b0390921691879081106105c8576105c861177a565b906000526020600020906004020160010154600687815481106105ed576105ed61177a565b906000526020600020906004020160020154600688815481106106125761061261177a565b90600052602060002090600402016003015493509350935093509193509193565b60065460005b818110156106dc57826001600160a01b03166006828154811061065e5761065e61177a565b60009182526020909120600490910201546001600160a01b0316036106ca5760405162461bcd60e51b815260206004820152601260248201527f6164643a206578697374696e6720706f6f6c000000000000000000000000000060448201526064015b60405180910390fd5b806106d4816117a6565b915050610639565b505050565b600654819081106107265760405162461bcd60e51b815260206004820152600f60248201526e1c1bdbdb08125908125b9d985b1a59608a1b60448201526064016106c1565b60006006838154811061073b5761073b61177a565b906000526020600020906004020190508060020154431161075b57505050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c791906117bf565b9050806000036107dd5750436002909101555050565b60006107ed836002015443610d6c565b9050600061080f6005548361080291906117d8565b85600101546008546111cc565b6002546004549192506001600160a01b03908116916340c10f19911661083684600a611211565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561089457600080fd5b505af11580156108a8573d6000803e3d6000fd5b50506002546003546040516340c10f1960e01b81526001600160a01b03918216600482015260248101869052911692506340c10f199150604401600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b5050506003850154610932915061092c8364e8d4a510006117d8565b85611221565b6003850155505043600290920191909155505b5050565b60006006828154811061095e5761095e61177a565b600091825260208083208584526007825260408085203380875293529093208054600490930290930180549094506109a3926001600160a01b03919091169190611231565b8054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6109f36110ab565b600a55565b60065460005b8181101561094557610a0f816106e1565b610a18816117a6565b90506109fe565b610a276110ab565b8015610a3557610a356109f8565b600060068481548110610a4a57610a4a61177a565b90600052602060002090600402016001015490508260068581548110610a7257610a7261177a565b90600052602060002090600402016001018190555082811461057857610a9b60085482856112a5565b600855610578611100565b610aae6110ab565b610ab860006112cc565b565b60065482908110610aff5760405162461bcd60e51b815260206004820152600f60248201526e1c1bdbdb08125908125b9d985b1a59608a1b60448201526064016106c1565b600060068481548110610b1457610b1461177a565b60009182526020808320878452600782526040808520338652909252922060049091029091019150610b45856106e1565b805415610b95576000816001015464e8d4a5100084600301548460000154610b6d91906117d8565b610b779190611805565b610b819190611827565b90508015610b9357610b933382611329565b505b8315610bc1578154610bb2906001600160a01b0316333087611393565b8054610bbe90856110d8565b81555b610bd98160000154836003015464e8d4a510006111cc565b6001820155604051848152859033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a35050505050565b60006006600081548110610c3257610c3261177a565b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df90915260408320600490920201925090610c79906106e1565b805415610cc2576000610ca9826000015464e8d4a510008560030154610c9f9190611805565b84600101546113cc565b90508015610cc0578154610cbd90826110d8565b82555b505b610cda8160000154836003015464e8d4a510006111cc565b60019091015550565b6004546001600160a01b03163314610d3d5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420417574686f72697a656400000000000000000000000000000000000060448201526064016106c1565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000610d7b8284600a546113f3565b90505b92915050565b60008060068481548110610d9a57610d9a61177a565b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a91906117bf565b9050836002015443118015610e4e57508015155b15610ea5576000610e63856002015443610d6c565b90506000610e8560055483610e7891906117d8565b87600101546008546111cc565b9050610ea0610e998264e8d4a510006117d8565b848661141a565b935050505b8254610ecf90610eb6600a85611805565b610ec59064e8d4a510006117d8565b85600101546113cc565b979650505050505050565b60065482908110610f1f5760405162461bcd60e51b815260206004820152600f60248201526e1c1bdbdb08125908125b9d985b1a59608a1b60448201526064016106c1565b600060068481548110610f3457610f3461177a565b600091825260208083208784526007825260408085203386529092529220805460049092029092019250841115610fad5760405162461bcd60e51b815260206004820152601260248201527f77697468647261773a206e6f7420676f6f64000000000000000000000000000060448201526064016106c1565b610fb6856106e1565b6000610fd5826000015464e8d4a510008560030154610c9f9190611805565b90508015610fe757610fe73382611329565b8415611011578154610ff9908661142a565b82558254611011906001600160a01b03163387611231565b6110298260000154846003015464e8d4a510006111cc565b6001830155604051858152869033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a3505050505050565b6110756110ab565b6001600160a01b03811661109f57604051631e4fbdf760e01b8152600060048201526024016106c1565b6110a8816112cc565b50565b6000546001600160a01b03163314610ab85760405163118cdaa760e01b81523360048201526024016106c1565b6000806000806110e8868661143a565b9150915081156110f6578092505b5090949350505050565b600654600060015b8281101561115257600681815481106111235761112361177a565b90600052602060002090600402016001015482611140919061183a565b915061114b816117a6565b9050611108565b50801561094557611164600382611805565b905061119860085460066000815481106111805761118061177a565b906000526020600020906004020160010154836112a5565b6008819055508060066000815481106111b3576111b361177a565b9060005260206000209060040201600101819055505050565b6000806000806111dc8787611463565b915091508115611204576000806111f383886114a0565b915091508115611201578094505b50505b50909150505b9392505050565b6000806000806110e886866114a0565b6000806000806111dc878761143a565b6040516001600160a01b038381166024830152604482018390526106dc91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114d3565b6000806000806112b58787611536565b915091508115611204576000806111f3838861143a565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604051630fa463a760e11b81526001600160a01b0384811660048301526024820184905290911690631f48c74e90604401600060405180830381600087803b15801561137757600080fd5b505af115801561138b573d6000803e3d6000fd5b505050505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526105789186918216906323b872dd9060840161125e565b6000806000806113dc8787611463565b915091508115611204576000806111f38388611536565b6000806000806114038787611536565b915091508115611204576000806111f38388611463565b6000806000806112b587876114a0565b6000806000806110e88686611536565b6000808383018481101561145557600080925092505061145c565b6001925090505b9250929050565b6000808360000361147a575060019050600061145c565b8383028385828161148d5761148d6117ef565b041461145557600080925092505061145c565b600080826000036114b65750600090508061145c565b60018385816114c7576114c76117ef565b04915091509250929050565b60006114e86001600160a01b03841683611558565b9050805160001415801561150d57508080602001905181019061150b919061184d565b155b156106dc57604051635274afe760e01b81526001600160a01b03841660048201526024016106c1565b6000808383111561154c5750600090508061145c565b50600193919092039150565b6060610d7b8383600084600080856001600160a01b0316848660405161157e919061186a565b60006040518083038185875af1925050503d80600081146115bb576040519150601f19603f3d011682016040523d82523d6000602084013e6115c0565b606091505b50915091506115d08683836115da565b9695505050505050565b6060826115ef576115ea82611636565b61120a565b815115801561160657506001600160a01b0384163b155b1561162f57604051639996b31560e01b81526001600160a01b03851660048201526024016106c1565b508061120a565b8051156116465780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561167157600080fd5b5035919050565b6001600160a01b03811681146110a857600080fd5b80151581146110a857600080fd5b6000806000606084860312156116b057600080fd5b8335925060208401356116c281611678565b915060408401356116d28161168d565b809150509250925092565b6000602082840312156116ef57600080fd5b813561120a81611678565b60008060006060848603121561170f57600080fd5b833592506020840135915060408401356116d28161168d565b6000806040838503121561173b57600080fd5b50508035926020909101359150565b6000806040838503121561175d57600080fd5b82359150602083013561176f81611678565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117b8576117b8611790565b5060010190565b6000602082840312156117d157600080fd5b5051919050565b8082028115828204841417610d7e57610d7e611790565b634e487b7160e01b600052601260045260246000fd5b60008261182257634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610d7e57610d7e611790565b80820180821115610d7e57610d7e611790565b60006020828403121561185f57600080fd5b815161120a8161168d565b6000825160005b8181101561188b5760208186018101518583015201611871565b50600092019182525091905056fea26469706673582212205b9da4a7294dd6dcbd23442f54ff3ff59c9dc719fdfd763b4e9fbedc48128c7264736f6c63430008140033";

type JWLMasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JWLMasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JWLMasterChef__factory extends ContractFactory {
  constructor(...args: JWLMasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _n2dr: AddressLike,
    _n2drpay: AddressLike,
    _dev: AddressLike,
    _n2drPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _multiplier: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _n2dr,
      _n2drpay,
      _dev,
      _n2drPerBlock,
      _startBlock,
      _multiplier,
      overrides || {}
    );
  }
  override deploy(
    _n2dr: AddressLike,
    _n2drpay: AddressLike,
    _dev: AddressLike,
    _n2drPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _multiplier: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _n2dr,
      _n2drpay,
      _dev,
      _n2drPerBlock,
      _startBlock,
      _multiplier,
      overrides || {}
    ) as Promise<
      JWLMasterChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JWLMasterChef__factory {
    return super.connect(runner) as JWLMasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JWLMasterChefInterface {
    return new Interface(_abi) as JWLMasterChefInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): JWLMasterChef {
    return new Contract(address, _abi, runner) as unknown as JWLMasterChef;
  }
}
