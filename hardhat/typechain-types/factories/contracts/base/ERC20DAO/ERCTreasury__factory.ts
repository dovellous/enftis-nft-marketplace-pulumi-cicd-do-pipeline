/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERCTreasury,
  ERCTreasuryInterface,
} from "../../../../contracts/base/ERC20DAO/ERCTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "proposalDescription",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenFullURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "executorWalletAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "amountDisbursed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executedAt",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "proposalDescription",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenFullURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "executorWalletAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "amountDisbursed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executedAt",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToProposalIdMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "proposalDescription",
        type: "string",
      },
      {
        internalType: "address",
        name: "executorWalletAddress",
        type: "address",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "executableProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "proposalDescription",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenFullURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalFunds",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "executorWalletAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "amountDisbursed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorWalletAddress",
        type: "address",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorWalletAddress",
        type: "address",
      },
    ],
    name: "getExecutorProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "proposalDescription",
            type: "string",
          },
          {
            internalType: "string",
            name: "tokenFullURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalFunds",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "executorWalletAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "amountDisbursed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executedAt",
            type: "uint256",
          },
        ],
        internalType: "struct ERCTreasury.ExecutableProposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalExecutor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "isReleased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50604051620026f6380380620026f6833981016040819052620000339162000199565b82825f620000428382620002b0565b506001620000518282620002b0565b5050506200006e620000686200008660201b60201c565b6200008a565b600b6200007c8282620002b0565b5050505062000378565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112620000ff575f80fd5b81516001600160401b03808211156200011c576200011c620000db565b604051601f8301601f19908116603f01168101908282118183101715620001475762000147620000db565b8160405283815260209250868385880101111562000163575f80fd5b5f91505b8382101562000186578582018301518183018401529082019062000167565b5f93810190920192909252949350505050565b5f805f60608486031215620001ac575f80fd5b83516001600160401b0380821115620001c3575f80fd5b620001d187838801620000ef565b94506020860151915080821115620001e7575f80fd5b620001f587838801620000ef565b935060408601519150808211156200020b575f80fd5b506200021a86828701620000ef565b9150509250925092565b600181811c908216806200023957607f821691505b6020821081036200025857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002ab575f81815260208120601f850160051c81016020861015620002865750805b601f850160051c820191505b81811015620002a75782815560010162000292565b5050505b505050565b81516001600160401b03811115620002cc57620002cc620000db565b620002e481620002dd845462000224565b846200025e565b602080601f8311600181146200031a575f8415620003025750858301515b5f19600386901b1c1916600185901b178555620002a7565b5f85815260208120601f198616915b828110156200034a5788860151825594840194600190910190840162000329565b50858210156200036857878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61237080620003865f395ff3fe60806040526004361061010f575f3560e01c806301ffc9a71461011357806306fdde0314610147578063081812fc14610168578063095ea7b31461019f5780631fb8ccfb146101c057806323b872dd146101f957806342842e0e146102185780634c5bf72d146102375780636352211e1461026b57806370a082311461028a578063715018a6146102a957806373962b26146102bd5780638d137f32146102f55780638da5cb5b1461032157806395d89b4114610335578063a22cb46514610349578063a2d70a6814610368578063a67a03ab1461039f578063b88d4fde146103be578063c87b56dd146103dd578063e985e9c5146103fc578063f2fde38b1461041b578063fd9d880d1461043a575b5f80fd5b34801561011e575f80fd5b5061013261012d366004611b68565b61045c565b60405190151581526020015b60405180910390f35b348015610152575f80fd5b5061015b610486565b60405161013e9190611bd0565b348015610173575f80fd5b50610187610182366004611be2565b610515565b6040516001600160a01b03909116815260200161013e565b3480156101aa575f80fd5b506101be6101b9366004611c14565b61053a565b005b3480156101cb575f80fd5b506101eb6101da366004611c3c565b600a6020525f908152604090205481565b60405190815260200161013e565b348015610204575f80fd5b506101be610213366004611c55565b610653565b348015610223575f80fd5b506101be610232366004611c55565b610684565b348015610242575f80fd5b50610256610251366004611be2565b61069e565b60405161013e99989796959493929190611c8e565b348015610276575f80fd5b50610187610285366004611be2565b610801565b348015610295575f80fd5b506101eb6102a4366004611c3c565b610834565b3480156102b4575f80fd5b506101be6108b8565b3480156102c8575f80fd5b506101326102d7366004611be2565b5f90815260096020526040902060050154600160a01b900460ff1690565b348015610300575f80fd5b5061031461030f366004611c3c565b6108cb565b60405161013e9190611cf8565b34801561032c575f80fd5b50610187610acc565b348015610340575f80fd5b5061015b610adb565b348015610354575f80fd5b506101be610363366004611d9d565b610aea565b348015610373575f80fd5b50610187610382366004611be2565b5f908152600960205260409020600501546001600160a01b031690565b3480156103aa575f80fd5b506101be6103b9366004611c3c565b610af9565b3480156103c9575f80fd5b506101be6103d8366004611e5c565b610ec2565b3480156103e8575f80fd5b5061015b6103f7366004611be2565b610efa565b348015610407575f80fd5b50610132610416366004611ed2565b611004565b348015610426575f80fd5b506101be610435366004611c3c565b611031565b61044d610448366004611f03565b6110aa565b60405161013e93929190611f68565b5f6001600160e01b03198216632483248360e11b148061048057506104808261125f565b92915050565b60605f805461049490611f8f565b80601f01602080910402602001604051908101604052809291908181526020018280546104c090611f8f565b801561050b5780601f106104e25761010080835404028352916020019161050b565b820191905f5260205f20905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b5f61051f826112ae565b505f908152600460205260409020546001600160a01b031690565b5f61054482610801565b9050806001600160a01b0316836001600160a01b0316036105b65760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105d257506105d28133611004565b6106445760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105ad565b61064e83836112d3565b505050565b61065d3382611340565b6106795760405162461bcd60e51b81526004016105ad90611fc7565b61064e83838361139d565b61064e83838360405180602001604052805f815250610ec2565b60096020525f9081526040902080546001820154600283018054929391926106c590611f8f565b80601f01602080910402602001604051908101604052809291908181526020018280546106f190611f8f565b801561073c5780601f106107135761010080835404028352916020019161073c565b820191905f5260205f20905b81548152906001019060200180831161071f57829003601f168201915b50505050509080600301805461075190611f8f565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90611f8f565b80156107c85780601f1061079f576101008083540402835291602001916107c8565b820191905f5260205f20905b8154815290600101906020018083116107ab57829003601f168201915b50505050600483015460058401546006850154600790950154939491936001600160a01b0382169350600160a01b90910460ff16919089565b5f8061080c836114ec565b90506001600160a01b0381166104805760405162461bcd60e51b81526004016105ad90612014565b5f6001600160a01b03821661089d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105ad565b506001600160a01b03165f9081526003602052604090205490565b6108c0611506565b6108c95f611565565b565b61091e6040518061012001604052805f81526020015f815260200160608152602001606081526020015f81526020015f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b6001600160a01b0382165f908152600a6020908152604080832054808452600983529281902081516101208101835281548152600182015493810193909352600281018054919284019161097190611f8f565b80601f016020809104026020016040519081016040528092919081815260200182805461099d90611f8f565b80156109e85780601f106109bf576101008083540402835291602001916109e8565b820191905f5260205f20905b8154815290600101906020018083116109cb57829003601f168201915b50505050508152602001600382018054610a0190611f8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d90611f8f565b8015610a785780601f10610a4f57610100808354040283529160200191610a78565b820191905f5260205f20905b815481529060010190602001808311610a5b57829003601f168201915b50505091835250506004820154602082015260058201546001600160a01b0381166040830152600160a01b900460ff16151560608201526006820154608082015260079091015460a0909101529392505050565b6007546001600160a01b031690565b60606001805461049490611f8f565b610af53383836115b6565b5050565b336001600160a01b03821614610b6b5760405162461bcd60e51b815260206004820152603160248201527f4f6e6c792074686520617070726f766564206578656375746f722063616e206360448201527030b636103a3434b990333ab731ba34b7b760791b60648201526084016105ad565b6001600160a01b0381165f908152600a6020908152604080832054808452600983528184208251610120810184528154815260018201549481019490945260028101805492959493919291840191610bc290611f8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bee90611f8f565b8015610c395780601f10610c1057610100808354040283529160200191610c39565b820191905f5260205f20905b815481529060010190602001808311610c1c57829003601f168201915b50505050508152602001600382018054610c5290611f8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7e90611f8f565b8015610cc95780601f10610ca057610100808354040283529160200191610cc9565b820191905f5260205f20905b815481529060010190602001808311610cac57829003601f168201915b50505091835250506004820154602082015260058201546001600160a01b0381166040830152600160a01b900460ff16151560608201526006820154608082015260079091015460a09091015260c081015190915015610d665760405162461bcd60e51b8152602060048201526018602482015277105b5bdd5b9d08185b1c9958591e48191a5cd89d5c9cd95960421b60448201526064016105ad565b600160c08201524261010082015260a081015160808201516040516001600160a01b039092169181156108fc0291905f818181858888f19350505050158015610db1573d5f803e3d5ffd5b505f8281526009602090815260409182902083518155908301516001820155908201518291906002820190610de69082612093565b5060608201516003820190610dfb9082612093565b50608082810151600483015560a08084015160058401805460c0808801511515600160a01b026001600160a81b03199092166001600160a01b039094169390931717905560e0808601516006860155610100909501516007909401939093558451602086015160408088015160608901519589015194890151968901519789015191517fb10d2ab88a8047e3ddf0af75676a650a3531b0a54cc8c5622f11c064c35b9cae98610eb598959794969295929390914290611c8e565b60405180910390a1505050565b610ecc3383611340565b610ee85760405162461bcd60e51b81526004016105ad90611fc7565b610ef48484848461167f565b50505050565b6060610f05826112ae565b5f8281526006602052604081208054610f1d90611f8f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4990611f8f565b8015610f945780601f10610f6b57610100808354040283529160200191610f94565b820191905f5260205f20905b815481529060010190602001808311610f7757829003601f168201915b505050505090505f610fb060408051602081019091525f815290565b905080515f03610fc1575092915050565b815115610ff3578082604051602001610fdb92919061214e565b60405160208183030381529060405292505050919050565b610ffc846116b2565b949350505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b611039611506565b6001600160a01b03811661109e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ad565b6110a781611565565b50565b5f8060606110b6611506565b5f6110c060085490565b90505f600b6110ce89611722565b6040516020016110df92919061217c565b60405160208183030381529060405290506110fa86836117b1565b61110482826118aa565b611112600880546001019055565b6001600160a01b0386165f818152600a602090815260408083208c90558051610120810182528681528083018d81528183018d81526060830188905234608084015260a083019690965260c082018590524260e083015261010082018590528d85526009909352922082518155905160018201559151909190600282019061119a9082612093565b50606082015160038201906111af9082612093565b506080820151600482015560a082015160058201805460c08501511515600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560e08201516006820155610100909101516007909101556040517ff7dcb1fbbd99993b646021d02a48e1c5536e23007ec6002996fc324896def65c9061124a9084908b908b90869034908d905f9042908290611c8e565b60405180910390a19697909695509350505050565b5f6001600160e01b031982166380ac58cd60e01b148061128f57506001600160e01b03198216635b5e139f60e01b145b8061048057506301ffc9a760e01b6001600160e01b0319831614610480565b6112b781611965565b6110a75760405162461bcd60e51b81526004016105ad90612014565b5f81815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061130782610801565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f8061134b83610801565b9050806001600160a01b0316846001600160a01b0316148061137257506113728185611004565b80610ffc5750836001600160a01b031661138b84610515565b6001600160a01b031614949350505050565b826001600160a01b03166113b082610801565b6001600160a01b0316146113d65760405162461bcd60e51b81526004016105ad906121f6565b6001600160a01b0382166114385760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105ad565b826001600160a01b031661144b82610801565b6001600160a01b0316146114715760405162461bcd60e51b81526004016105ad906121f6565b5f81815260046020908152604080832080546001600160a01b03199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184935f8051602061231b83398151915291a4505050565b5f908152600260205260409020546001600160a01b031690565b3361150f610acc565b6001600160a01b0316146108c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ad565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b816001600160a01b0316836001600160a01b0316036116135760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016105ad565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61168a84848461139d565b61169684848484611981565b610ef45760405162461bcd60e51b81526004016105ad9061223b565b60606116bd826112ae565b5f6116d260408051602081019091525f815290565b90505f8151116116f05760405180602001604052805f81525061171b565b806116fa84611722565b60405160200161170b92919061214e565b6040516020818303038152906040525b9392505050565b60605f61172e83611a7e565b60010190505f816001600160401b0381111561174c5761174c611dd6565b6040519080825280601f01601f191660200182016040528015611776576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461178057509392505050565b6001600160a01b0382166118075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105ad565b61181081611965565b1561182d5760405162461bcd60e51b81526004016105ad9061228d565b61183681611965565b156118535760405162461bcd60e51b81526004016105ad9061228d565b6001600160a01b0382165f81815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291905f8051602061231b833981519152908290a45050565b6118b382611965565b6119165760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016105ad565b5f82815260066020526040902061192d8282612093565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b5f80611970836114ec565b6001600160a01b0316141592915050565b5f6001600160a01b0384163b15611a7357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119c49033908990889088906004016122c3565b6020604051808303815f875af19250505080156119fe575060408051601f3d908101601f191682019092526119fb918101906122ff565b60015b611a59573d808015611a2b576040519150601f19603f3d011682016040523d82523d5f602084013e611a30565b606091505b5080515f03611a515760405162461bcd60e51b81526004016105ad9061223b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ffc565b506001949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611abc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b8310611ae6576904ee2d6d415b85acef8160201b830492506020015b662386f26fc100008310611b0457662386f26fc10000830492506010015b6305f5e1008310611b1c576305f5e100830492506008015b6127108310611b3057612710830492506004015b60648310611b42576064830492506002015b600a83106104805760010192915050565b6001600160e01b0319811681146110a7575f80fd5b5f60208284031215611b78575f80fd5b813561171b81611b53565b5f5b83811015611b9d578181015183820152602001611b85565b50505f910152565b5f8151808452611bbc816020860160208601611b83565b601f01601f19169290920160200192915050565b602081525f61171b6020830184611ba5565b5f60208284031215611bf2575f80fd5b5035919050565b80356001600160a01b0381168114611c0f575f80fd5b919050565b5f8060408385031215611c25575f80fd5b611c2e83611bf9565b946020939093013593505050565b5f60208284031215611c4c575f80fd5b61171b82611bf9565b5f805f60608486031215611c67575f80fd5b611c7084611bf9565b9250611c7e60208501611bf9565b9150604084013590509250925092565b5f6101208b83528a6020840152806040840152611cad8184018b611ba5565b90508281036060840152611cc1818a611ba5565b608084019890985250506001600160a01b039490941660a085015291151560c084015260e083015261010090910152949350505050565b6020815281516020820152602082015160408201525f6040830151610120806060850152611d2a610140850183611ba5565b91506060850151601f19858403016080860152611d478382611ba5565b925050608085015160a085015260a0850151611d6e60c08601826001600160a01b03169052565b5060c085015180151560e08601525060e085015161010085810191909152909401519390920192909252919050565b5f8060408385031215611dae575f80fd5b611db783611bf9565b915060208301358015158114611dcb575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f6001600160401b0380841115611e0357611e03611dd6565b604051601f8501601f19908116603f01168101908282118183101715611e2b57611e2b611dd6565b81604052809350858152868686011115611e43575f80fd5b858560208301375f602087830101525050509392505050565b5f805f8060808587031215611e6f575f80fd5b611e7885611bf9565b9350611e8660208601611bf9565b92506040850135915060608501356001600160401b03811115611ea7575f80fd5b8501601f81018713611eb7575f80fd5b611ec687823560208401611dea565b91505092959194509250565b5f8060408385031215611ee3575f80fd5b611eec83611bf9565b9150611efa60208401611bf9565b90509250929050565b5f805f60608486031215611f15575f80fd5b8335925060208401356001600160401b03811115611f31575f80fd5b8401601f81018613611f41575f80fd5b611f5086823560208401611dea565b925050611f5f60408501611bf9565b90509250925092565b838152826020820152606060408201525f611f866060830184611ba5565b95945050505050565b600181811c90821680611fa357607f821691505b602082108103611fc157634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b601f82111561064e575f81815260208120601f850160051c8101602086101561206c5750805b601f850160051c820191505b8181101561208b57828155600101612078565b505050505050565b81516001600160401b038111156120ac576120ac611dd6565b6120c0816120ba8454611f8f565b84612046565b602080601f8311600181146120f3575f84156120dc5750858301515b5f19600386901b1c1916600185901b17855561208b565b5f85815260208120601f198616915b8281101561212157888601518255948401946001909101908401612102565b508582101561213e57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f835161215f818460208801611b83565b835190830190612173818360208801611b83565b01949350505050565b5f80845461218981611f8f565b600182811680156121a157600181146121b6576121e2565b60ff19841687528215158302870194506121e2565b885f526020805f205f5b858110156121d95781548a8201529084019082016121c0565b50505082870194505b505050508351612173818360208801611b83565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252601c908201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604082015260600190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906122f590830184611ba5565b9695505050505050565b5f6020828403121561230f575f80fd5b815161171b81611b5356feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212208bd79fea39489c0b8444a7fb8f404a15cf4890942f71cf1a0f5fdb6916991e9664736f6c63430008140033";

type ERCTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERCTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERCTreasury__factory extends ContractFactory {
  constructor(...args: ERCTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERCTreasury> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      overrides || {}
    ) as Promise<ERCTreasury>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      overrides || {}
    );
  }
  override attach(address: string): ERCTreasury {
    return super.attach(address) as ERCTreasury;
  }
  override connect(signer: Signer): ERCTreasury__factory {
    return super.connect(signer) as ERCTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERCTreasuryInterface {
    return new utils.Interface(_abi) as ERCTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERCTreasury {
    return new Contract(address, _abi, signerOrProvider) as ERCTreasury;
  }
}
