/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721FactoryBase,
  ERC721FactoryBaseInterface,
} from "../../../../contracts/base/ERC721/ERC721FactoryBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e0a38038062001e0a83398101604081905262000034916200019d565b8181600262000044838262000315565b50600362000053828262000315565b5050600e805460ff1916905550506001600f5550620003e5565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715620000ab57620000ab6200006d565b6040525050565b6000620000be60405190565b9050620000cc828262000083565b919050565b60006001600160401b03821115620000ed57620000ed6200006d565b601f19601f83011660200192915050565b60005b838110156200011b57818101518382015260200162000101565b50506000910152565b60006200013b6200013584620000d1565b620000b2565b905082815260208101848484011115620001585762000158600080fd5b62000165848285620000fe565b509392505050565b600082601f830112620001835762000183600080fd5b81516200019584826020860162000124565b949350505050565b60008060408385031215620001b557620001b5600080fd5b82516001600160401b03811115620001d057620001d0600080fd5b620001de858286016200016d565b92505060208301516001600160401b03811115620001ff57620001ff600080fd5b6200020d858286016200016d565b9150509250929050565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806200024257607f821691505b60208210810362000257576200025762000217565b50919050565b60006200026e6200026b8381565b90565b92915050565b6200027f836200025d565b815460001960089490940293841b1916921b91909117905550565b6000620002a981848462000274565b505050565b81811015620002cd57620002c46000826200029a565b600101620002ae565b5050565b601f821115620002a9576000818152602090206020601f85010481016020851015620002fa5750805b6200030e6020601f860104830182620002ae565b5050505050565b81516001600160401b038111156200033157620003316200006d565b6200033d82546200022d565b6200034a828285620002d1565b6020601f831160018114620003815760008415620003685750858201515b600019600886021c1981166002860217865550620003dd565b600085815260208120601f198616915b82811015620003b3578885015182556020948501946001909201910162000391565b86831015620003d05784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b611a1580620003f56000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806342966c68116100de57806395d89b4111610097578063b88d4fde11610071578063b88d4fde1461032d578063c87b56dd14610340578063d547741f14610354578063e985e9c51461036757600080fd5b806395d89b411461030a578063a217fddf14610312578063a22cb4651461031a57600080fd5b806342966c68146102a05780634f6ccce7146102b35780635c975abb146102c65780636352211e146102d157806370a08231146102e457806391d14854146102f757600080fd5b8063248a9ca311610130578063248a9ca3146102105780632a55205a146102335780632f2ff15d146102545780632f745c591461026757806336568abe1461027a57806342842e0e1461028d57600080fd5b806301ffc9a71461017857806306fdde03146101a2578063081812fc146101b7578063095ea7b3146101d757806318160ddd146101ec57806323b872dd146101fd575b600080fd5b61018c610186366004610f74565b50600090565b6040516101999190610f9f565b60405180910390f35b6101aa6103a3565b6040516101999190611003565b6101ca6101c5366004611025565b610435565b6040516101999190611060565b6101ea6101e5366004611082565b61045c565b005b600a545b60405161019991906110c5565b6101ea61020b3660046110d3565b6104ea565b6101f061021e366004611025565b6000908152600d602052604090206001015490565b610246610241366004611123565b61051c565b604051610199929190611145565b6101ea610262366004611160565b6105c8565b6101f0610275366004611082565b6105ed565b6101ea610288366004611160565b610642565b6101ea61029b3660046110d3565b610678565b6101ea6102ae366004611025565b610693565b6101f06102c1366004611025565b6106bb565b600e5460ff1661018c565b6101ca6102df366004611025565b610709565b6101f06102f2366004611193565b61073e565b61018c610305366004611160565b610782565b6101aa6107ad565b6101f0600081565b6101ea6103283660046111c7565b6107bc565b6101ea61033b3660046112f5565b6107c7565b6101aa61034e366004611025565b50606090565b6101ea610362366004611160565b6107ff565b61018c610375366004611374565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6060600280546103b2906113ac565b80601f01602080910402602001604051908101604052809291908181526020018280546103de906113ac565b801561042b5780601f106104005761010080835404028352916020019161042b565b820191906000526020600020905b81548152906001019060200180831161040e57829003601f168201915b5050505050905090565b600061044082610824565b506000908152600660205260409020546001600160a01b031690565b600061046782610709565b9050806001600160a01b0316836001600160a01b0316036104a35760405162461bcd60e51b815260040161049a90611419565b60405180910390fd5b336001600160a01b03821614806104bf57506104bf8133610375565b6104db5760405162461bcd60e51b815260040161049a90611483565b6104e58383610858565b505050565b6104f5335b826108c6565b6105115760405162461bcd60e51b815260040161049a906114dd565b6104e5838383610945565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916105915750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b6020810151600090612710906105b0906001600160601b031687611503565b6105ba9190611538565b915196919550909350505050565b6000828152600d60205260409020600101546105e381610a7a565b6104e58383610a84565b60006105f88361073e565b82106106165760405162461bcd60e51b815260040161049a90611594565b506001600160a01b03821660009081526008602090815260408083208484529091529020545b92915050565b6001600160a01b038116331461066a5760405162461bcd60e51b815260040161049a906115f0565b6106748282610b0a565b5050565b6104e5838383604051806020016040528060008152506107c7565b61069c336104ef565b6106b85760405162461bcd60e51b815260040161049a906114dd565b50565b60006106c6600a5490565b82106106e45760405162461bcd60e51b815260040161049a90611649565b600a82815481106106f7576106f7611659565b90600052602060002001549050919050565b6000818152600460205260408120546001600160a01b03168061063c5760405162461bcd60e51b815260040161049a906116a6565b60006001600160a01b0382166107665760405162461bcd60e51b815260040161049a906116fc565b506001600160a01b031660009081526005602052604090205490565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600380546103b2906113ac565b610674338383610b71565b6107d133836108c6565b6107ed5760405162461bcd60e51b815260040161049a906114dd565b6107f984848484610c13565b50505050565b6000828152600d602052604090206001015461081a81610a7a565b6104e58383610b0a565b6000818152600460205260409020546001600160a01b03166106b85760405162461bcd60e51b815260040161049a906116a6565b600081815260066020526040902080546001600160a01b0319166001600160a01b038416908117909155819061088d82610709565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806108d283610709565b9050806001600160a01b0316846001600160a01b0316148061091957506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b8061093d5750836001600160a01b031661093284610435565b6001600160a01b0316145b949350505050565b826001600160a01b031661095882610709565b6001600160a01b03161461097e5760405162461bcd60e51b815260040161049a9061174e565b6001600160a01b0382166109a45760405162461bcd60e51b815260040161049a9061179f565b6109b18383836001610c46565b826001600160a01b03166109c482610709565b6001600160a01b0316146109ea5760405162461bcd60e51b815260040161049a9061174e565b600081815260066020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260058552838620805460001901905590871680865283862080546001019055868652600490945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106b88133610c4e565b610a8e8282610782565b610674576000828152600d602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610ac63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b148282610782565b15610674576000828152600d602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b816001600160a01b0316836001600160a01b031603610ba25760405162461bcd60e51b815260040161049a906117e3565b6001600160a01b0383811660008181526007602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610c06908590610f9f565b60405180910390a3505050565b610c1e848484610945565b610c2a84848484610ca7565b6107f95760405162461bcd60e51b815260040161049a90611842565b6107f9610da8565b610c588282610782565b61067457610c6581610dcd565b610c70836020610ddf565b604051602001610c81929190611874565b60408051601f198184030181529082905262461bcd60e51b825261049a91600401611003565b60006001600160a01b0384163b15610d9d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ceb9033908990889088906004016118cc565b6020604051808303816000875af1925050508015610d26575060408051601f3d908101601f19168201909252610d239181019061191b565b60015b610d83573d808015610d54576040519150601f19603f3d011682016040523d82523d6000602084013e610d59565b606091505b508051600003610d7b5760405162461bcd60e51b815260040161049a90611842565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061093d565b506001949350505050565b600e5460ff1615610dcb5760405162461bcd60e51b815260040161049a90611963565b565b606061063c6001600160a01b03831660145b60606000610dee836002611503565b610df9906002611973565b67ffffffffffffffff811115610e1157610e116111fa565b6040519080825280601f01601f191660200182016040528015610e3b576020820181803683370190505b509050600360fc1b81600081518110610e5657610e56611659565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e8557610e85611659565b60200101906001600160f81b031916908160001a9053506000610ea9846002611503565b610eb4906001611973565b90505b6001811115610f2c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610ee857610ee8611659565b1a60f81b828281518110610efe57610efe611659565b60200101906001600160f81b031916908160001a90535060049490941c93610f2581611986565b9050610eb7565b508315610f4b5760405162461bcd60e51b815260040161049a906119cf565b9392505050565b6001600160e01b031981165b81146106b857600080fd5b803561063c81610f52565b600060208284031215610f8957610f89600080fd5b600061093d8484610f69565b8015155b82525050565b6020810161063c8284610f95565b60005b83811015610fc8578181015183820152602001610fb0565b50506000910152565b6000610fdb825190565b808452602084019350610ff2818560208601610fad565b601f01601f19169290920192915050565b60208082528101610f4b8184610fd1565b80610f5e565b803561063c81611014565b60006020828403121561103a5761103a600080fd5b600061093d848461101a565b60006001600160a01b03821661063c565b610f9981611046565b6020810161063c8284611057565b610f5e81611046565b803561063c8161106e565b6000806040838503121561109857611098600080fd5b60006110a48585611077565b92505060206110b58582860161101a565b9150509250929050565b80610f99565b6020810161063c82846110bf565b6000806000606084860312156110eb576110eb600080fd5b60006110f78686611077565b935050602061110886828701611077565b92505060406111198682870161101a565b9150509250925092565b6000806040838503121561113957611139600080fd5b60006110a4858561101a565b604081016111538285611057565b610f4b60208301846110bf565b6000806040838503121561117657611176600080fd5b6000611182858561101a565b92505060206110b585828601611077565b6000602082840312156111a8576111a8600080fd5b600061093d8484611077565b801515610f5e565b803561063c816111b4565b600080604083850312156111dd576111dd600080fd5b60006111e98585611077565b92505060206110b5858286016111bc565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715611236576112366111fa565b6040525050565b600061124860405190565b90506112548282611210565b919050565b600067ffffffffffffffff821115611273576112736111fa565b601f19601f83011660200192915050565b82818337506000910152565b60006112a361129e84611259565b61123d565b9050828152602081018484840111156112be576112be600080fd5b6112c9848285611284565b509392505050565b600082601f8301126112e5576112e5600080fd5b813561093d848260208601611290565b6000806000806080858703121561130e5761130e600080fd5b600061131a8787611077565b945050602061132b87828801611077565b935050604061133c8782880161101a565b925050606085013567ffffffffffffffff81111561135c5761135c600080fd5b611368878288016112d1565b91505092959194509250565b6000806040838503121561138a5761138a600080fd5b60006111828585611077565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806113c057607f821691505b6020821081036113d2576113d2611396565b50919050565b602181526000602082017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015291505b5060400190565b6020808252810161063c816113d8565b603d81526000602082017f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060208201529150611412565b6020808252810161063c81611429565b602d81526000602082017f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526c1c881bdc88185c1c1c9bdd9959609a1b60208201529150611412565b6020808252810161063c81611493565b634e487b7160e01b600052601160045260246000fd5b81810280821583820485141761151b5761151b6114ed565b5092915050565b634e487b7160e01b600052601260045260246000fd5b60008261154757611547611522565b500490565b602b81526000602082017f455243373231456e756d657261626c653a206f776e657220696e646578206f7581526a74206f6620626f756e647360a81b60208201529150611412565b6020808252810161063c8161154c565b602f81526000602082017f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636581526e103937b632b9903337b91039b2b63360891b60208201529150611412565b6020808252810161063c816115a4565b602c81526000602082017f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f81526b7574206f6620626f756e647360a01b60208201529150611412565b6020808252810161063c81611600565b634e487b7160e01b600052603260045260246000fd5b601881526000602082017f4552433732313a20696e76616c696420746f6b656e2049440000000000000000815291505b5060200190565b6020808252810161063c8161166f565b602981526000602082017f4552433732313a2061646472657373207a65726f206973206e6f7420612076618152683634b21037bbb732b960b91b60208201529150611412565b6020808252810161063c816116b6565b602581526000602082017f4552433732313a207472616e736665722066726f6d20696e636f72726563742081526437bbb732b960d91b60208201529150611412565b6020808252810161063c8161170c565b602481526000602082017f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b60208201529150611412565b6020808252810161063c8161175e565b601981526000602082017f4552433732313a20617070726f766520746f2063616c6c6572000000000000008152915061169f565b6020808252810161063c816117af565b603281526000602082017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60208201529150611412565b6020808252810161063c816117f3565b600061185c825190565b61186a818560208601610fad565b9290920192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260170160006118a68285611852565b7001034b99036b4b9b9b4b733903937b6329607d1b8152601101915061093d8284611852565b608081016118da8287611057565b6118e76020830186611057565b6118f460408301856110bf565b81810360608301526119068184610fd1565b9695505050505050565b805161063c81610f52565b60006020828403121561193057611930600080fd5b600061093d8484611910565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061169f565b6020808252810161063c8161193c565b8082018082111561063c5761063c6114ed565b600081611995576119956114ed565b506000190190565b60208082527f537472696e67733a20686578206c656e67746820696e73756666696369656e749101908152600061169f565b6020808252810161063c8161199d56fea2646970667358221220e342f4501388910ba9f461280ea660d2dece8e71f71bbe0d4b88f682040d05ca64736f6c63430008120033";

type ERC721FactoryBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721FactoryBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721FactoryBase__factory extends ContractFactory {
  constructor(...args: ERC721FactoryBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721FactoryBase> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC721FactoryBase>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC721FactoryBase {
    return super.attach(address) as ERC721FactoryBase;
  }
  override connect(signer: Signer): ERC721FactoryBase__factory {
    return super.connect(signer) as ERC721FactoryBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721FactoryBaseInterface {
    return new utils.Interface(_abi) as ERC721FactoryBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721FactoryBase {
    return new Contract(address, _abi, signerOrProvider) as ERC721FactoryBase;
  }
}
