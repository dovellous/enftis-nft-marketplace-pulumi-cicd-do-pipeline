/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Snippets,
  SnippetsInterface,
} from "../../../contracts/libs/Snippets";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_data",
        type: "bytes32",
      },
    ],
    name: "bytes32String",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getIPFSPrefix",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61040961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80637484939414610045578063d10c6b331461006e575b600080fd5b6100586100533660046101fd565b61009c565b6040516100659190610216565b60405180910390f35b6040517f66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe8152602001610065565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b602081101561014b5760006100db826008610290565b6100e6906002610391565b6100f09087610290565b90506001600160f81b031981161561013a5780848481518110610115576101156103a4565b60200101906001600160f81b031916908160001a90535082610136816103ba565b9350505b50610144816103ba565b90506100c5565b506000816001600160401b0381111561016657610166610264565b6040519080825280601f01601f191660200182016040528015610190576020820181803683370190505b50905060005b828110156101f4578381815181106101b0576101b06103a4565b602001015160f81c60f81b8282815181106101cd576101cd6103a4565b60200101906001600160f81b031916908160001a9053506101ed816103ba565b9050610196565b50949350505050565b60006020828403121561020f57600080fd5b5035919050565b600060208083528351808285015260005b8181101561024357858101830151858201604001528201610227565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102a7576102a761027a565b92915050565b600181815b808511156102e85781600019048211156102ce576102ce61027a565b808516156102db57918102915b93841c93908002906102b2565b509250929050565b6000826102ff575060016102a7565b8161030c575060006102a7565b8160018114610322576002811461032c57610348565b60019150506102a7565b60ff84111561033d5761033d61027a565b50506001821b6102a7565b5060208310610133831016604e8410600b841016171561036b575081810a6102a7565b61037583836102ad565b80600019048211156103895761038961027a565b029392505050565b600061039d83836102f0565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016103cc576103cc61027a565b506001019056fea26469706673582212206803c4770cb480672bdd39de6a70708d42577ac992ef9f144df27291cb46e09664736f6c63430008120033";

type SnippetsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnippetsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Snippets__factory extends ContractFactory {
  constructor(...args: SnippetsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Snippets> {
    return super.deploy(overrides || {}) as Promise<Snippets>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Snippets {
    return super.attach(address) as Snippets;
  }
  override connect(signer: Signer): Snippets__factory {
    return super.connect(signer) as Snippets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnippetsInterface {
    return new utils.Interface(_abi) as SnippetsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Snippets {
    return new Contract(address, _abi, signerOrProvider) as Snippets;
  }
}
