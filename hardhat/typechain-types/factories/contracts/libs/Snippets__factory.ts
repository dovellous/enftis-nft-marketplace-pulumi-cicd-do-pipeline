/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Snippets,
  SnippetsInterface,
} from "../../../contracts/libs/Snippets";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AMOUNT_BELOW_MINTING_FEE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_AFTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_AT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_BEFORE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OUT_OF_BOUNDS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_PERMISSIONS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_CALLER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY_REACHED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_APPROVED_OWNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_ADMINS_SPECIFIED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_MINTERS_SPECIFIED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRING",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIMESTAMP",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_DOES_NOT_EXISTS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_URI_EXISTS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UINT256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_AFTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_AT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_BEFORE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32String",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "a",
        type: "string",
      },
      {
        internalType: "string",
        name: "b",
        type: "string",
      },
    ],
    name: "compareStrings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getIPFSPrefix",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minterAddress",
            type: "address",
          },
          {
            internalType: "address[2]",
            name: "creatorAddress",
            type: "address[2]",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Structs.NFTItem",
        name: "_nftItem",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_tokenURIString",
        type: "string",
      },
    ],
    name: "searchHasMatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "stringBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "what",
        type: "string",
      },
      {
        internalType: "string",
        name: "where",
        type: "string",
      },
    ],
    name: "stringContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "subString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "trim",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6118f361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061023c5760003560e01c80637966c4311161013a578063bed34bba116100c2578063e4fbb60911610086578063e4fbb60914610713578063ed63455c1461073a578063fb67a12d1461074d578063fdad77a114610774578063fe6d81241461036557600080fd5b8063bed34bba14610669578063d10c6b331461068c578063d3dc1272146106b2578063d5391393146106d9578063e14c63f51461070057600080fd5b8063a35d677e11610109578063a35d677e146105a6578063a9c40e69146105cd578063ac394060146105f4578063b51ce63d1461061b578063b56a2dc61461064257600080fd5b80637966c4311461051e5780637afca97e1461053157806389a89002146105585780638e7dc3431461057f57600080fd5b8063538ba4f9116101c8578063697e0ef21161018c578063697e0ef2146104625780637484939414610489578063749e480d146104a957806375b238fc146104d057806378ce9035146104f757600080fd5b8063538ba4f9146103b3578063589e9c82146103da578063592c80ee146104015780635e3ba200146104145780635f1c4c0e1461043b57600080fd5b806311b60e7b1161020f57806311b60e7b146102f05780631e7341c91461031757806320f9f02b1461033e578063296555cf14610365578063433448491461038c57600080fd5b8063023bdf011461024157806305c2c45a1461027b5780630d50c222146102a2578063117803e3146102c9575b600080fd5b6102687ffa21d81135d602cbdd6d6eba32f113725ff3cf3482deca5b7e42e431627ab4bc81565b6040519081526020015b60405180910390f35b6102687f22468b554f8de3f8c7c3e441faddd40dbca3acf65d471cbab7ab89c8cff4287d81565b6102687f4f1f4510b69fad6299ff39d382e74059b0940bed8ddd501bdf0a8ef73b144adc81565b6102687f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b81565b6102687fdb8ecf91f7fb45f19c7705fc675a1a92284efc9e6304c32b842093cc66a9dc0981565b6102687f7aea2a5a54ade2c7d5177326e7a3070116c6f0c0e0e2c8e4979c1a8643ecb26c81565b6102687fbf8cb79a39bb793e84d2e97ae1406af328da3f623c7688fc6a7ab735c1b165de81565b6102687ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6102687f94a878f488b402745116100074a492c72c3221a277262ef976a0007ead25098181565b6102687f71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af81565b6102687fc4cb8fb7b1a67482de901cc9aac777eef40e2b59fe11c7aa102d3bf285ff434081565b61026861040f3660046113aa565b610787565b6102687fb2e6499345d96e037716d80a8f051a58027e1cff758fee9d8c0e5962739093fd81565b6102687f7ba4dc8f715496ea115fdbd0a2da65e0665096c909392fefbfb708035bd6291581565b6102687f09ddea8cc7bb8763f501e1101b83d1f724d14016aa7cdef5f09ab85743ee0fad81565b61049c6104973660046113de565b6107a6565b604051610272919061141b565b6102687f1b7b16d47b420cd544637a4b677908a3cb78ab80e6ec01961b34e3f9341a431c81565b6102687fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6102687fbc9ecbac2549f1ca8c3c6bab68fc976b8b7a87f2885e7d9b9841d24b9eb7e04781565b61049c61052c36600461144e565b6108dc565b6102687f0e2d7b14c4519d5ad3f8769d43604f04814bf1a8cec789bdd604eaebe6d918ba81565b6102687f29a7b54c9b9e97f4b05fe2a20397ff46497367dee25875b7a64afd9a6d3f073b81565b6102687fac4317ad065204c7e47ff7f32fffc3164ed4ea8ff94c4aeb3a03805e8ebc66cf81565b6102687ff647d384bb32a7fe4b8df7c717daa563ccfcd146bfe3d12d8d0293af1980bfc881565b6102687fc43c74b0d34a6fbfabf4592afcf3487b8712b1e333c74b94d27064b3bc208e2481565b6102687f785d4e53f6caa98bae956367b0c04e9178ed4fe6b5e55204288a54d81e04b3fb81565b6102687f44b6a97d834a9bfb7662b75c503f57331f40641fb9ee522bec507f7ba6a4655c81565b6102687fa4254a4224c9957c03dbd475df3c1fcd3ae3e540c5b0b78617306d3566e57a4b81565b61067c61067736600461149b565b6109a8565b6040519015158152602001610272565b7f66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe610268565b6102687f7224d0b24cbe51460a003681be787a3532eb2369489536477f0d269f69978a9481565b6102687f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61049c61070e3660046114fe565b610a02565b6102687f3c2519c4487d47714872f92cf90a50c25f5deaec2789dc2a497b1272df611db681565b61067c61074836600461149b565b610a50565b6102687ff7cdaa469931e3108134377723e8da207dac8d0bb6a5e4bf593d544bbef723a281565b61067c6107823660046115a4565b610b1b565b80516000908290820361079d5750600092915050565b50506020015190565b606060005b60208160ff161080156107df5750828160ff16602081106107ce576107ce6116e5565b1a60f81b6001600160f81b03191615155b156107f657806107ee81611711565b9150506107ab565b60008160ff166001600160401b0381111561081357610813611295565b6040519080825280601f01601f19166020018201604052801561083d576020820181803683370190505b509050600091505b60208260ff161080156108795750838260ff1660208110610868576108686116e5565b1a60f81b6001600160f81b03191615155b156108d557838260ff1660208110610893576108936116e5565b1a60f81b818360ff16815181106108ac576108ac6116e5565b60200101906001600160f81b031916908160001a905350816108cd81611711565b925050610845565b9392505050565b60608360006108eb8585611730565b6001600160401b0381111561090257610902611295565b6040519080825280601f01601f19166020018201604052801561092c576020820181803683370190505b509050845b8481101561099e5782818151811061094b5761094b6116e5565b01602001516001600160f81b031916826109658884611730565b81518110610975576109756116e5565b60200101906001600160f81b031916908160001a9053508061099681611743565b915050610931565b5095945050505050565b6000816040516020016109bb919061175c565b60405160208183030381529060405280519060200120836040516020016109e2919061175c565b604051602081830303815290604052805190602001201490505b92915050565b6060610a1082848688611778565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b949350505050565b81518151600091849184911115610a6657600080fd5b6000805b83518351610a789190611730565b811161099e57600160005b8551811015610af757858181518110610a9e57610a9e6116e5565b01602001516001600160f81b03191685610ab883866117a2565b81518110610ac857610ac86116e5565b01602001516001600160f81b03191614610ae55760009150610af7565b80610aef81611743565b915050610a83565b508015610b0857600192505061099e565b5080610b1381611743565b915050610a6a565b600080836060015160001461114f578360600151600003610b3d579050610a48565b60208481015101516001600160a01b0316610b59579050610a48565b60408401516001600160a01b0316610b72579050610a48565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc98603610bd957600085806020019051810190610baf91906117b5565b9050806001600160a01b031685600001516001600160a01b031603610bd357600191505b5061114f565b7f3c2519c4487d47714872f92cf90a50c25f5deaec2789dc2a497b1272df611db68603610c3d57600085806020019051810190610c1691906117b5565b60208681015101519091506001600160a01b03808316911603610bd357600191505061114f565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b8603610ca357600085806020019051810190610c7a91906117b5565b9050806001600160a01b031685604001516001600160a01b031603610bd357600191505061114f565b7f44b6a97d834a9bfb7662b75c503f57331f40641fb9ee522bec507f7ba6a4655c8603610d4a57600085806020019051810190610ce091906117b5565b9050806001600160a01b031685600001516001600160a01b031603610d0457600191505b60208581015101516001600160a01b03828116911603610d2357600191505b806001600160a01b031685604001516001600160a01b031603610bd357600191505061114f565b7f29a7b54c9b9e97f4b05fe2a20397ff46497367dee25875b7a64afd9a6d3f073b8603610d9e57600085806020019051810190610d8791906117d2565b905080856060015103610bd357600191505061114f565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc98603610ddb57600085806020019051810190610d8791906117d2565b7fbc9ecbac2549f1ca8c3c6bab68fc976b8b7a87f2885e7d9b9841d24b9eb7e0478603610e3357600085806020019051810190610e189190611830565b9050610e2484826109a8565b15610bd357600191505061114f565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b8603610e7057600085806020019051810190610e189190611830565b7f0e2d7b14c4519d5ad3f8769d43604f04814bf1a8cec789bdd604eaebe6d918ba8603610ead57600085806020019051810190610e189190611830565b7fa4254a4224c9957c03dbd475df3c1fcd3ae3e540c5b0b78617306d3566e57a4b8603610f0157600085806020019051810190610eea91906117d2565b905080856080015103610bd357600191505061114f565b7ff647d384bb32a7fe4b8df7c717daa563ccfcd146bfe3d12d8d0293af1980bfc88603610f5657600085806020019051810190610f3e91906117d2565b90508085608001511115610bd357600191505061114f565b7fac4317ad065204c7e47ff7f32fffc3164ed4ea8ff94c4aeb3a03805e8ebc66cf8603610fab57600085806020019051810190610f9391906117d2565b90508085608001511015610bd357600191505061114f565b7fc43c74b0d34a6fbfabf4592afcf3487b8712b1e333c74b94d27064b3bc208e248603610fff57600085806020019051810190610fe891906117d2565b9050808560a0015103610bd357600191505061114f565b7fb2e6499345d96e037716d80a8f051a58027e1cff758fee9d8c0e5962739093fd86036110545760008580602001905181019061103c91906117d2565b9050808560a001511115610bd357600191505061114f565b7f22468b554f8de3f8c7c3e441faddd40dbca3acf65d471cbab7ab89c8cff4287d86036110a95760008580602001905181019061109191906117d2565b9050808560a001511015610bd357600191505061114f565b7f1b7b16d47b420cd544637a4b677908a3cb78ab80e6ec01961b34e3f9341a431c860361110d576000858060200190518101906110e691906117d2565b9050808560800151036110f857600191505b808560a0015103610bd357600191505061114f565b600080868060200190518101906111249190611864565b9150915061113182611158565b60000361114c576111428186610a50565b1561114c57600192505b50505b95945050505050565b600080825b805182101561128e57600781838151811061117a5761117a6116e5565b01602001516001600160f81b031990811690911c166000036111a8576111a16001836117a2565b915061127c565b8051600360f91b906005908390859081106111c5576111c56116e5565b01602001516001600160f81b031990811690911c16036111ea576111a16002836117a2565b8051600760f91b90600490839085908110611207576112076116e5565b01602001516001600160f81b031990811690911c160361122c576111a16003836117a2565b8051600f60f91b90600390839085908110611249576112496116e5565b01602001516001600160f81b031990811690911c160361126e576111a16004836117a2565b6112796001836117a2565b91505b8261128681611743565b93505061115d565b5050919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156112cd576112cd611295565b60405290565b604080519081016001600160401b03811182821017156112cd576112cd611295565b604051601f8201601f191681016001600160401b038111828210171561131d5761131d611295565b604052919050565b60006001600160401b0382111561133e5761133e611295565b50601f01601f191660200190565b600061135f61135a84611325565b6112f5565b905082815283838301111561137357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261139b57600080fd5b6108d58383356020850161134c565b6000602082840312156113bc57600080fd5b81356001600160401b038111156113d257600080fd5b610a488482850161138a565b6000602082840312156113f057600080fd5b5035919050565b60005b838110156114125781810151838201526020016113fa565b50506000910152565b602081526000825180602084015261143a8160408501602087016113f7565b601f01601f19169190910160400192915050565b60008060006060848603121561146357600080fd5b83356001600160401b0381111561147957600080fd5b6114858682870161138a565b9660208601359650604090950135949350505050565b600080604083850312156114ae57600080fd5b82356001600160401b03808211156114c557600080fd5b6114d18683870161138a565b935060208501359150808211156114e757600080fd5b506114f48582860161138a565b9150509250929050565b6000806000806060858703121561151457600080fd5b84356001600160401b038082111561152b57600080fd5b818701915087601f83011261153f57600080fd5b81358181111561154e57600080fd5b88602082850101111561156057600080fd5b6020928301999098509187013596604001359550909350505050565b6001600160a01b038116811461159157600080fd5b50565b803561159f8161157c565b919050565b6000806000808486036101408112156115bc57600080fd5b853594506020808701356001600160401b03808211156115db57600080fd5b818901915089601f8301126115ef57600080fd5b6115fd8a833585850161134c565b965060e0603f198501121561161157600080fd5b6116196112ab565b93506040890135915061162b8261157c565b81845289607f8a011261163d57600080fd5b6116456112d3565b91508160a08a018b81111561165957600080fd5b60608b015b8181101561167e5780356116718161157c565b855293850193850161165e565b50818587015261168d81611594565b6040870152505060c0890135606085015260e0890135608085015261010089013560a085015292945061012088013592808411156116ca57600080fd5b5050506116d98782880161138a565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103611727576117276116fb565b60010192915050565b818103818111156109fc576109fc6116fb565b600060018201611755576117556116fb565b5060010190565b6000825161176e8184602087016113f7565b9190910192915050565b6000808585111561178857600080fd5b8386111561179557600080fd5b5050820193919092039150565b808201808211156109fc576109fc6116fb565b6000602082840312156117c757600080fd5b81516108d58161157c565b6000602082840312156117e457600080fd5b5051919050565b600082601f8301126117fc57600080fd5b815161180a61135a82611325565b81815284602083860101111561181f57600080fd5b610a488260208301602087016113f7565b60006020828403121561184257600080fd5b81516001600160401b0381111561185857600080fd5b610a48848285016117eb565b6000806040838503121561187757600080fd5b82516001600160401b038082111561188e57600080fd5b61189a868387016117eb565b935060208501519150808211156118b057600080fd5b506114f4858286016117eb56fea2646970667358221220560d8a9fc4b90701bb290b3fdf8b2dc6c1d35a4adfc3479e2d691d0a9cc6c2d164736f6c63430008130033";

type SnippetsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnippetsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Snippets__factory extends ContractFactory {
  constructor(...args: SnippetsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Snippets> {
    return super.deploy(overrides || {}) as Promise<Snippets>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Snippets {
    return super.attach(address) as Snippets;
  }
  override connect(signer: Signer): Snippets__factory {
    return super.connect(signer) as Snippets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnippetsInterface {
    return new utils.Interface(_abi) as SnippetsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Snippets {
    return new Contract(address, _abi, signerOrProvider) as Snippets;
  }
}
