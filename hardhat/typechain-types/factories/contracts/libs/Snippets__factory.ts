/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Snippets,
  SnippetsInterface,
} from "../../../contracts/libs/Snippets";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_EXTENSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_AFTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_AT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_BEFORE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC1155INTERFACE",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC20INTERFACE",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC2981INTERFACE",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721INTERFACE",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IPFS_PREFIX",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SELLER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNAPSHOT_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRING",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIMESTAMP",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UINT256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_AFTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_AT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_BEFORE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32String",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "a",
        type: "string",
      },
      {
        internalType: "string",
        name: "b",
        type: "string",
      },
    ],
    name: "compareStrings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "generateRandomHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "generateRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "getTokenURIFromID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "getTokenURIFromURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "msgSender",
    outputs: [
      {
        internalType: "address payable",
        name: "sender",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minterAddress",
            type: "address",
          },
          {
            internalType: "address[2]",
            name: "creatorAddress",
            type: "address[2]",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Structs.NFTItem",
        name: "_nftItem",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_tokenURIString",
        type: "string",
      },
    ],
    name: "searchHasMatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "tokenInterfaceId",
            type: "bytes4",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isAuction",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "supportsRoyalties",
            type: "bool",
          },
          {
            internalType: "address",
            name: "tokenContractAddress",
            type: "address",
          },
          {
            internalType: "address payable[3]",
            name: "creatorSellerOwner",
            type: "address[3]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenIndexedID",
            type: "uint256",
          },
        ],
        internalType: "struct Structs.NFTMarketItem",
        name: "_nftItem",
        type: "tuple",
      },
    ],
    name: "searchNFTMarketItemHasMatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_self",
        type: "string",
      },
      {
        internalType: "string",
        name: "_needle",
        type: "string",
      },
    ],
    name: "searchString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "stringBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "what",
        type: "string",
      },
      {
        internalType: "string",
        name: "where",
        type: "string",
      },
    ],
    name: "stringContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61203d610035600b8282823980515f1a60731461002957634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101d6575f3560e01c806305c2c45a146101da57806307cb1a6e146102015780630c83bee014610228578063117803e31461023c5780631879c7501461025057806322904b4a1461025e578063260a529a1461027e578063296555cf146102915780634303707e146102a5578063592c80ee146102b85780635e3ba200146102cb5780637028e2cd146102df5780637484939414610306578063749e480d1461031957806375b238fc1461032d57806378ce9035146103545780637afca97e1461036857806389a890021461037c5780638c878dbb146103905780638e7dc343146103a35780638fa581a3146103b757806393af7a84146103da578063a35d677e146103ed578063a9c40e6914610401578063b51ce63d14610415578063b56a2dc614610429578063bca93eba1461043d578063bd5063ac14610451578063bed34bba14610464578063cbb7974814610477578063d481188414610485578063d539139314610493578063d737d0c7146104ba578063df3fdf00146104da578063e4fbb609146104ee578063e63ab1e914610502578063ed63455c14610529578063fdad77a11461053c578063fe6d812414610291575b5f80fd5b6101ee5f80516020611e8883398151915281565b6040519081526020015b60405180910390f35b61020f6380ac58cd60e01b81565b6040516001600160e01b031990911681526020016101f8565b6101ee5f80516020611fe883398151915281565b6101ee5f80516020611f6883398151915281565b61020f63152a902d60e11b81565b61027161026c3660046116a4565b61054f565b6040516101f89190611722565b61027161028c366004611734565b610576565b6101ee5f80516020611e4883398151915281565b6101ee6102b336600461179b565b6105d2565b6101ee6102c63660046116a4565b6105f5565b6101ee5f80516020611f8883398151915281565b6101ee7f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f81565b61027161031436600461179b565b610612565b6101ee5f80516020611de883398151915281565b6101ee7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6101ee5f80516020611f2883398151915281565b6101ee5f80516020611fc883398151915281565b6101ee5f80516020611ec883398151915281565b6101ee61039e36600461179b565b610739565b6101ee5f80516020611ee883398151915281565b6103ca6103c53660046117b2565b610772565b60405190151581526020016101f8565b6102716103e83660046117b2565b6107b4565b6101ee5f80516020611f0883398151915281565b6101ee5f80516020611e0883398151915281565b6101ee5f80516020611ea883398151915281565b6101ee5f80516020611e6883398151915281565b6101ee5f80516020611fa883398151915281565b6103ca61045f3660046118ce565b6107e0565b6103ca6104723660046117b2565b610bf5565b61020f636cdb3d1360e11b81565b61020f6336372b0760e01b81565b6101ee7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6104c2610c4d565b6040516001600160a01b0390911681526020016101f8565b6101ee5f80516020611f4883398151915281565b6101ee5f80516020611e2883398151915281565b6101ee7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6103ca6105373660046117b2565b610ca6565b6103ca61054a3660046119e5565b610d72565b606081515f036105725761056f5f80516020611fe8833981519152610612565b91505b5090565b8051606090156105875750806105cb565b8261059185611277565b6105a75f80516020611f48833981519152610612565b6040516020016105b993929190611b08565b60405160208183030381529060405290505b9392505050565b5f806105df600143611b5e565b905080406105ed8482611b71565b949350505050565b80515f908290820361060957505f92915050565b50506020015190565b60605f5b60208160ff1610801561064a5750828160ff166020811061063957610639611b90565b1a60f81b6001600160f81b03191615155b1561065f5761065881611ba4565b9050610616565b5f8160ff166001600160401b0381111561067b5761067b61157b565b6040519080825280601f01601f1916602001820160405280156106a5576020820181803683370190505b5090505f91505b60208260ff161080156106e05750838260ff16602081106106cf576106cf611b90565b1a60f81b6001600160f81b03191615155b156105cb57838260ff16602081106106fa576106fa611b90565b1a60f81b818360ff168151811061071357610713611b90565b60200101906001600160f81b03191690815f1a90535061073282611ba4565b91506106ac565b5f610743826105d2565b60405160200161075591815260200190565b604051602081830303815290604052805190602001209050919050565b5f8061077d84611306565b90505f61078984611306565b602080840151845183519284015193945090926107a7928491611332565b1415925050505b92915050565b606082826040516020016107c9929190611bc2565b604051602081830303815290604052905092915050565b5f806108116040518060400160405280600e81526020016d050529a2a0a921a424a72397171760911b815250611441565b610140830151156105ed578261014001515f0361082f5790506105cb565b60a08301516001600160a01b03166108485790506105cb565b60c0830151604001516001600160a01b03166108655790506105cb565b5f80516020611fa883398151915285036108c2575f8480602001905181019061088e9190611bf0565b60c08501519091506001600160a01b0382169060015b60200201516001600160a01b0316036108bc57600191505b506105ed565b5f80516020611e288339815191528503610904575f848060200190518101906108eb9190611bf0565b60c08501519091506001600160a01b038216905f6108a4565b5f80516020611f68833981519152850361092d575f848060200190518101906108eb9190611bf0565b5f80516020611ea883398151915285036109ad575f848060200190518101906109569190611bf0565b60c0850151602001519091506001600160a01b0380831691160361097957600191505b60c0840151516001600160a01b0382811691160361099657600191505b60c08401516001600160a01b0382169060026108a4565b5f80516020611ec883398151915285036109ee575f848060200190518101906109d69190611c0b565b905080846101400151036108bc5760019150506105ed565b5f80516020611e488339815191528503610a17575f848060200190518101906109d69190611c0b565b5f80516020611f088339815191528503610a59575f84806020019051810190610a409190611c0b565b90508084610100015110156108bc5760019150506105ed565b5f80516020611e688339815191528503610a9a575f84806020019051810190610a829190611c0b565b905080846101000151036108bc5760019150506105ed565b5f80516020611ee88339815191528503610adc575f84806020019051810190610ac39190611c0b565b90508084610100015111156108bc5760019150506105ed565b5f80516020611f888339815191528503610b1e575f84806020019051810190610b059190611c0b565b90508084610120015110156108bc5760019150506105ed565b5f80516020611e088339815191528503610b5f575f84806020019051810190610b479190611c0b565b905080846101200151036108bc5760019150506105ed565b5f80516020611e888339815191528503610ba1575f84806020019051810190610b889190611c0b565b90508084610120015111156108bc5760019150506105ed565b5f80516020611de883398151915285036105ed575f84806020019051810190610bca9190611c0b565b90508084610100015103610bdd57600191505b80846101200151036108bc5750600195945050505050565b5f81604051602001610c079190611c22565b6040516020818303038152906040528051906020012083604051602001610c2e9190611c22565b6040516020818303038152906040528051906020012014905092915050565b5f303303610ca0575f80368080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050503601516001600160a01b03169150610ca39050565b50335b90565b815181515f91849184911115610cba575f80fd5b5f805b83518351610ccb9190611b5e565b8111610d685760015f5b8551811015610d4657858181518110610cf057610cf0611b90565b01602001516001600160f81b03191685610d0a8386611c3d565b81518110610d1a57610d1a611b90565b01602001516001600160f81b03191614610d36575f9150610d46565b610d3f81611c50565b9050610cd5565b508015610d57576001925050610d68565b50610d6181611c50565b9050610cbd565b5095945050505050565b5f80610da36040518060400160405280600e81526020016d050529a2a0a921a424a72397171760911b815250611441565b60608401511561126e5783606001515f03610dbf5790506105ed565b6020840151516001600160a01b0316610dd95790506105ed565b60408401516001600160a01b0316610df25790506105ed565b5f80516020611e488339815191528603610e44575f85806020019051810190610e1b9190611bf0565b9050806001600160a01b0316855f01516001600160a01b031603610e3e57600191505b5061126e565b5f80516020611e288339815191528603610eb1575f85806020019051810190610e6d9190611bf0565b6020860151519091506001600160a01b03808316911603610e8d57600191505b60208581015101516001600160a01b03828116911603610e3e57600191505061126e565b5f80516020611f688339815191528603610f03575f85806020019051810190610eda9190611bf0565b9050806001600160a01b031685604001516001600160a01b031603610e3e57600191505061126e565b5f80516020611ea88339815191528603610f93575f85806020019051810190610f2c9190611bf0565b9050806001600160a01b0316855f01516001600160a01b031603610f4f57600191505b6020850151516001600160a01b03828116911603610f6c57600191505b806001600160a01b031685604001516001600160a01b031603610e3e57600191505061126e565b5f80516020611ec88339815191528603610fd3575f85806020019051810190610fbc9190611c0b565b905080856060015103610e3e57600191505061126e565b5f80516020611e488339815191528603610ffc575f85806020019051810190610fbc9190611c0b565b5f80516020611f288339815191528603611040575f858060200190518101906110259190611c68565b90506110318482610bf5565b15610e3e57600191505061126e565b5f80516020611f688339815191528603611069575f858060200190518101906110259190611c68565b5f80516020611fc8833981519152860361109e575f858060200190518101906110929190611c68565b90506110318482610772565b5f80516020611f0883398151915286036110df575f858060200190518101906110c79190611c0b565b90508085608001511015610e3e57600191505061126e565b5f80516020611e68833981519152860361111f575f858060200190518101906111089190611c0b565b905080856080015103610e3e57600191505061126e565b5f80516020611ee88339815191528603611160575f858060200190518101906111489190611c0b565b90508085608001511115610e3e57600191505061126e565b5f80516020611f8883398151915286036111a1575f858060200190518101906111899190611c0b565b9050808560a001511015610e3e57600191505061126e565b5f80516020611e0883398151915286036111e1575f858060200190518101906111ca9190611c0b565b9050808560a0015103610e3e57600191505061126e565b5f80516020611e888339815191528603611222575f8580602001905181019061120a9190611c0b565b9050808560a001511115610e3e57600191505061126e565b5f80516020611de8833981519152860361126e575f8580602001905181019061124b9190611c0b565b90508085608001510361125d57600191505b808560a0015103610e3e5760019150505b95945050505050565b60605f61128383611487565b60010190505f816001600160401b038111156112a1576112a161157b565b6040519080825280601f01601f1916602001820160405280156112cb576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112d557509392505050565b6040805180820182525f8082526020918201528151808301909252825182529182019181019190915290565b5f8085841161143757602084116113e3575f841561137b576001611357866020611b5e565b611362906008611cd0565b61136d906002611dc7565b6113779190611b5e565b1990505b835181168561138a8989611c3d565b6113949190611b5e565b805190935082165b8181146113ce578784116113b657879450505050506105ed565b836113c081611dd2565b94505082845116905061139c565b6113d88785611c3d565b9450505050506105ed565b8383206113f08588611b5e565b6113fa9087611c3d565b91505b85821061143557848220808203611422576114188684611c3d565b93505050506105ed565b61142d600184611b5e565b9250506113fd565b505b5092949350505050565b611484816040516024016114559190611722565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261155c565b50565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114c55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106114ef576904ee2d6d415b85acef8160201b830492506020015b662386f26fc10000831061150d57662386f26fc10000830492506010015b6305f5e1008310611525576305f5e100830492506008015b612710831061153957612710830492506004015b6064831061154b576064830492506002015b600a83106107ae5760010192915050565b5f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b634e487b7160e01b5f52604160045260245ffd5b60405161018081016001600160401b03811182821017156115b2576115b261157b565b60405290565b60405160c081016001600160401b03811182821017156115b2576115b261157b565b604080519081016001600160401b03811182821017156115b2576115b261157b565b604051601f8201601f191681016001600160401b03811182821017156116245761162461157b565b604052919050565b5f6001600160401b038211156116445761164461157b565b50601f01601f191660200190565b5f82601f830112611661575f80fd5b813561167461166f8261162c565b6115fc565b818152846020838601011115611688575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156116b4575f80fd5b81356001600160401b038111156116c9575f80fd5b6105ed84828501611652565b5f5b838110156116ef5781810151838201526020016116d7565b50505f910152565b5f815180845261170e8160208601602086016116d5565b601f01601f19169290920160200192915050565b602081525f6105cb60208301846116f7565b5f805f60608486031215611746575f80fd5b8335925060208401356001600160401b0380821115611763575f80fd5b61176f87838801611652565b93506040860135915080821115611784575f80fd5b5061179186828701611652565b9150509250925092565b5f602082840312156117ab575f80fd5b5035919050565b5f80604083850312156117c3575f80fd5b82356001600160401b03808211156117d9575f80fd5b6117e586838701611652565b935060208501359150808211156117fa575f80fd5b5061180785828601611652565b9150509250929050565b80356001600160e01b031981168114611828575f80fd5b919050565b80358015158114611828575f80fd5b6001600160a01b0381168114611484575f80fd5b80356118288161183c565b5f82601f83011261186a575f80fd5b604051606081016001600160401b038111828210171561188c5761188c61157b565b6040528060608401858111156118a0575f80fd5b845b818110156118c35780356118b58161183c565b8352602092830192016118a2565b509195945050505050565b5f805f8385036102008112156118e2575f80fd5b8435935060208501356001600160401b038111156118fe575f80fd5b61190a87828801611652565b9350506101c080603f1983011215611920575f80fd5b61192861158f565b915061193660408701611811565b82526119446060870161182d565b60208301526119556080870161182d565b604083015261196660a0870161182d565b606083015261197760c0870161182d565b608083015261198860e08701611850565b60a083015261010061199c8882890161185b565b60c08401526101608088013560e0850152610180880135828501526101a0880135610120850152828801356101408501526101e088013581850152505050809150509250925092565b5f805f808486036101408112156119fa575f80fd5b853594506020808701356001600160401b0380821115611a18575f80fd5b611a248a838b01611652565b965060e0603f1985011215611a37575f80fd5b611a3f6115b8565b935060408901359150611a518261183c565b81845289607f8a0112611a62575f80fd5b611a6a6115da565b91508160a08a018b811115611a7d575f80fd5b60608b015b81811015611aa2578035611a958161183c565b8552938501938501611a82565b508185870152611ab181611850565b6040870152505060c0890135606085015260e0890135608085015261010089013560a08501529294506101208801359280841115611aed575f80fd5b505050611afc87828801611652565b91505092959194509250565b5f8451611b198184602089016116d5565b845190830190611b2d8183602089016116d5565b8451910190611b408183602088016116d5565b0195945050505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107ae576107ae611b4a565b5f82611b8b57634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52603260045260245ffd5b5f60ff821660ff8103611bb957611bb9611b4a565b60010192915050565b5f8351611bd38184602088016116d5565b835190830190611be78183602088016116d5565b01949350505050565b5f60208284031215611c00575f80fd5b81516105cb8161183c565b5f60208284031215611c1b575f80fd5b5051919050565b5f8251611c338184602087016116d5565b9190910192915050565b808201808211156107ae576107ae611b4a565b5f60018201611c6157611c61611b4a565b5060010190565b5f60208284031215611c78575f80fd5b81516001600160401b03811115611c8d575f80fd5b8201601f81018413611c9d575f80fd5b8051611cab61166f8261162c565b818152856020838501011115611cbf575f80fd5b61126e8260208301602086016116d5565b80820281158282048414176107ae576107ae611b4a565b600181815b80851115611d2157815f1904821115611d0757611d07611b4a565b80851615611d1457918102915b93841c9390800290611cec565b509250929050565b5f82611d37575060016107ae565b81611d4357505f6107ae565b8160018114611d595760028114611d6357611d7f565b60019150506107ae565b60ff841115611d7457611d74611b4a565b50506001821b6107ae565b5060208310610133831016604e8410600b8410161715611da2575081810a6107ae565b611dac8383611ce7565b805f1904821115611dbf57611dbf611b4a565b029392505050565b5f6105cb8383611d29565b5f81611de057611de0611b4a565b505f19019056fe1b7b16d47b420cd544637a4b677908a3cb78ab80e6ec01961b34e3f9341a431cc43c74b0d34a6fbfabf4592afcf3487b8712b1e333c74b94d27064b3bc208e243c2519c4487d47714872f92cf90a50c25f5deaec2789dc2a497b1272df611db6f0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9a4254a4224c9957c03dbd475df3c1fcd3ae3e540c5b0b78617306d3566e57a4b22468b554f8de3f8c7c3e441faddd40dbca3acf65d471cbab7ab89c8cff4287d44b6a97d834a9bfb7662b75c503f57331f40641fb9ee522bec507f7ba6a4655c29a7b54c9b9e97f4b05fe2a20397ff46497367dee25875b7a64afd9a6d3f073bac4317ad065204c7e47ff7f32fffc3164ed4ea8ff94c4aeb3a03805e8ebc66cff647d384bb32a7fe4b8df7c717daa563ccfcd146bfe3d12d8d0293af1980bfc8bc9ecbac2549f1ca8c3c6bab68fc976b8b7a87f2885e7d9b9841d24b9eb7e04794311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a79726270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91bb2e6499345d96e037716d80a8f051a58027e1cff758fee9d8c0e5962739093fde27592a68a79c541972a95a186227e8435146610cb2d3eb8f8589c9a507d61b20e2d7b14c4519d5ad3f8769d43604f04814bf1a8cec789bdd604eaebe6d918ba66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afea264697066735822122032b4e7666d4ae789b97e65826d9563d48cb8019bcecebdd31ef50bc95fa024fe64736f6c63430008140033";

type SnippetsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnippetsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Snippets__factory extends ContractFactory {
  constructor(...args: SnippetsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Snippets & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Snippets__factory {
    return super.connect(runner) as Snippets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnippetsInterface {
    return new Interface(_abi) as SnippetsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Snippets {
    return new Contract(address, _abi, runner) as unknown as Snippets;
  }
}
