/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Snippets,
  SnippetsInterface,
} from "../../../contracts/libs/Snippets";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AMOUNT_BELOW_MINTING_FEE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_AFTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_AT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATED_BEFORE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OUT_OF_BOUNDS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_PERMISSIONS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_CALLER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY_REACHED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NOT_APPROVED_OWNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_ADMINS_SPECIFIED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NO_MINTERS_SPECIFIED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRING",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIMESTAMP",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_DOES_NOT_EXISTS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_URI_EXISTS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UINT256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_AFTER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_AT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATED_BEFORE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32String",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "a",
        type: "string",
      },
      {
        internalType: "string",
        name: "b",
        type: "string",
      },
    ],
    name: "compareStrings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getIPFSPrefix",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_itemKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "minterAddress",
            type: "address",
          },
          {
            internalType: "address[2]",
            name: "creatorAddress",
            type: "address[2]",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Structs.NFTItem",
        name: "_nftItem",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_tokenURIString",
        type: "string",
      },
    ],
    name: "searchHasMatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "what",
        type: "string",
      },
      {
        internalType: "string",
        name: "where",
        type: "string",
      },
    ],
    name: "stringContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "subString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "trim",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61188261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106102315760003560e01c80637966c4311161013a578063bed34bba116100c2578063e4fbb60911610086578063e4fbb609146106f5578063ed63455c1461071c578063fb67a12d1461072f578063fdad77a114610756578063fe6d81241461035a57600080fd5b8063bed34bba1461064b578063d10c6b331461066e578063d3dc127214610694578063d5391393146106bb578063e14c63f5146106e257600080fd5b8063a35d677e11610109578063a35d677e14610588578063a9c40e69146105af578063ac394060146105d6578063b51ce63d146105fd578063b56a2dc61461062457600080fd5b80637966c431146105005780637afca97e1461051357806389a890021461053a5780638e7dc3431461056157600080fd5b8063538ba4f9116101bd578063697e0ef21161018c578063697e0ef214610444578063748493941461046b578063749e480d1461048b57806375b238fc146104b257806378ce9035146104d957600080fd5b8063538ba4f9146103a8578063589e9c82146103cf5780635e3ba200146103f65780635f1c4c0e1461041d57600080fd5b806311b60e7b1161020457806311b60e7b146102e55780631e7341c91461030c57806320f9f02b14610333578063296555cf1461035a578063433448491461038157600080fd5b8063023bdf011461023657806305c2c45a146102705780630d50c22214610297578063117803e3146102be575b600080fd5b61025d7ffa21d81135d602cbdd6d6eba32f113725ff3cf3482deca5b7e42e431627ab4bc81565b6040519081526020015b60405180910390f35b61025d7f22468b554f8de3f8c7c3e441faddd40dbca3acf65d471cbab7ab89c8cff4287d81565b61025d7f4f1f4510b69fad6299ff39d382e74059b0940bed8ddd501bdf0a8ef73b144adc81565b61025d7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b81565b61025d7fdb8ecf91f7fb45f19c7705fc675a1a92284efc9e6304c32b842093cc66a9dc0981565b61025d7f7aea2a5a54ade2c7d5177326e7a3070116c6f0c0e0e2c8e4979c1a8643ecb26c81565b61025d7fbf8cb79a39bb793e84d2e97ae1406af328da3f623c7688fc6a7ab735c1b165de81565b61025d7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b61025d7f94a878f488b402745116100074a492c72c3221a277262ef976a0007ead25098181565b61025d7f71869b3729b99fadce3ee30cb1aa2a0d639e6a2d24158c1ae1ae0059e81b72af81565b61025d7fc4cb8fb7b1a67482de901cc9aac777eef40e2b59fe11c7aa102d3bf285ff434081565b61025d7fb2e6499345d96e037716d80a8f051a58027e1cff758fee9d8c0e5962739093fd81565b61025d7f7ba4dc8f715496ea115fdbd0a2da65e0665096c909392fefbfb708035bd6291581565b61025d7f09ddea8cc7bb8763f501e1101b83d1f724d14016aa7cdef5f09ab85743ee0fad81565b61047e610479366004611258565b610769565b6040516102679190611295565b61025d7f1b7b16d47b420cd544637a4b677908a3cb78ab80e6ec01961b34e3f9341a431c81565b61025d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61025d7fbc9ecbac2549f1ca8c3c6bab68fc976b8b7a87f2885e7d9b9841d24b9eb7e04781565b61047e61050e3660046113dd565b61089f565b61025d7f0e2d7b14c4519d5ad3f8769d43604f04814bf1a8cec789bdd604eaebe6d918ba81565b61025d7f29a7b54c9b9e97f4b05fe2a20397ff46497367dee25875b7a64afd9a6d3f073b81565b61025d7fac4317ad065204c7e47ff7f32fffc3164ed4ea8ff94c4aeb3a03805e8ebc66cf81565b61025d7ff647d384bb32a7fe4b8df7c717daa563ccfcd146bfe3d12d8d0293af1980bfc881565b61025d7fc43c74b0d34a6fbfabf4592afcf3487b8712b1e333c74b94d27064b3bc208e2481565b61025d7f785d4e53f6caa98bae956367b0c04e9178ed4fe6b5e55204288a54d81e04b3fb81565b61025d7f44b6a97d834a9bfb7662b75c503f57331f40641fb9ee522bec507f7ba6a4655c81565b61025d7fa4254a4224c9957c03dbd475df3c1fcd3ae3e540c5b0b78617306d3566e57a4b81565b61065e61065936600461142a565b61096b565b6040519015158152602001610267565b7f66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe61025d565b61025d7f7224d0b24cbe51460a003681be787a3532eb2369489536477f0d269f69978a9481565b61025d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61047e6106f036600461148d565b6109c5565b61025d7f3c2519c4487d47714872f92cf90a50c25f5deaec2789dc2a497b1272df611db681565b61065e61072a36600461142a565b610a13565b61025d7ff7cdaa469931e3108134377723e8da207dac8d0bb6a5e4bf593d544bbef723a281565b61065e610764366004611533565b610ade565b606060005b60208160ff161080156107a25750828160ff166020811061079157610791611674565b1a60f81b6001600160f81b03191615155b156107b957806107b1816116a0565b91505061076e565b60008160ff166001600160401b038111156107d6576107d66112c8565b6040519080825280601f01601f191660200182016040528015610800576020820181803683370190505b509050600091505b60208260ff1610801561083c5750838260ff166020811061082b5761082b611674565b1a60f81b6001600160f81b03191615155b1561089857838260ff166020811061085657610856611674565b1a60f81b818360ff168151811061086f5761086f611674565b60200101906001600160f81b031916908160001a90535081610890816116a0565b925050610808565b9392505050565b60608360006108ae85856116bf565b6001600160401b038111156108c5576108c56112c8565b6040519080825280601f01601f1916602001820160405280156108ef576020820181803683370190505b509050845b848110156109615782818151811061090e5761090e611674565b01602001516001600160f81b0319168261092888846116bf565b8151811061093857610938611674565b60200101906001600160f81b031916908160001a90535080610959816116d2565b9150506108f4565b5095945050505050565b60008160405160200161097e91906116eb565b60405160208183030381529060405280519060200120836040516020016109a591906116eb565b604051602081830303815290604052805190602001201490505b92915050565b60606109d382848688611707565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b949350505050565b81518151600091849184911115610a2957600080fd5b6000805b83518351610a3b91906116bf565b811161096157600160005b8551811015610aba57858181518110610a6157610a61611674565b01602001516001600160f81b03191685610a7b8386611731565b81518110610a8b57610a8b611674565b01602001516001600160f81b03191614610aa85760009150610aba565b80610ab2816116d2565b915050610a46565b508015610acb576001925050610961565b5080610ad6816116d2565b915050610a2d565b6000808360600151600014611112578360600151600003610b00579050610a0b565b60208481015101516001600160a01b0316610b1c579050610a0b565b60408401516001600160a01b0316610b35579050610a0b565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc98603610b9c57600085806020019051810190610b729190611744565b9050806001600160a01b031685600001516001600160a01b031603610b9657600191505b50611112565b7f3c2519c4487d47714872f92cf90a50c25f5deaec2789dc2a497b1272df611db68603610c0057600085806020019051810190610bd99190611744565b60208681015101519091506001600160a01b03808316911603610b96576001915050611112565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b8603610c6657600085806020019051810190610c3d9190611744565b9050806001600160a01b031685604001516001600160a01b031603610b96576001915050611112565b7f44b6a97d834a9bfb7662b75c503f57331f40641fb9ee522bec507f7ba6a4655c8603610d0d57600085806020019051810190610ca39190611744565b9050806001600160a01b031685600001516001600160a01b031603610cc757600191505b60208581015101516001600160a01b03828116911603610ce657600191505b806001600160a01b031685604001516001600160a01b031603610b96576001915050611112565b7f29a7b54c9b9e97f4b05fe2a20397ff46497367dee25875b7a64afd9a6d3f073b8603610d6157600085806020019051810190610d4a9190611761565b905080856060015103610b96576001915050611112565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc98603610d9e57600085806020019051810190610d4a9190611761565b7fbc9ecbac2549f1ca8c3c6bab68fc976b8b7a87f2885e7d9b9841d24b9eb7e0478603610df657600085806020019051810190610ddb91906117bf565b9050610de7848261096b565b15610b96576001915050611112565b7f6270edb7c868f86fda4adedba75108201087268ea345934db8bad688e1feb91b8603610e3357600085806020019051810190610ddb91906117bf565b7f0e2d7b14c4519d5ad3f8769d43604f04814bf1a8cec789bdd604eaebe6d918ba8603610e7057600085806020019051810190610ddb91906117bf565b7fa4254a4224c9957c03dbd475df3c1fcd3ae3e540c5b0b78617306d3566e57a4b8603610ec457600085806020019051810190610ead9190611761565b905080856080015103610b96576001915050611112565b7ff647d384bb32a7fe4b8df7c717daa563ccfcd146bfe3d12d8d0293af1980bfc88603610f1957600085806020019051810190610f019190611761565b90508085608001511115610b96576001915050611112565b7fac4317ad065204c7e47ff7f32fffc3164ed4ea8ff94c4aeb3a03805e8ebc66cf8603610f6e57600085806020019051810190610f569190611761565b90508085608001511015610b96576001915050611112565b7fc43c74b0d34a6fbfabf4592afcf3487b8712b1e333c74b94d27064b3bc208e248603610fc257600085806020019051810190610fab9190611761565b9050808560a0015103610b96576001915050611112565b7fb2e6499345d96e037716d80a8f051a58027e1cff758fee9d8c0e5962739093fd860361101757600085806020019051810190610fff9190611761565b9050808560a001511115610b96576001915050611112565b7f22468b554f8de3f8c7c3e441faddd40dbca3acf65d471cbab7ab89c8cff4287d860361106c576000858060200190518101906110549190611761565b9050808560a001511015610b96576001915050611112565b7f1b7b16d47b420cd544637a4b677908a3cb78ab80e6ec01961b34e3f9341a431c86036110d0576000858060200190518101906110a99190611761565b9050808560800151036110bb57600191505b808560a0015103610b96576001915050611112565b600080868060200190518101906110e791906117f3565b915091506110f48261111b565b60000361110f576111058186610a13565b1561110f57600192505b50505b95945050505050565b600080825b805182101561125157600781838151811061113d5761113d611674565b01602001516001600160f81b031990811690911c1660000361116b57611164600183611731565b915061123f565b8051600360f91b9060059083908590811061118857611188611674565b01602001516001600160f81b031990811690911c16036111ad57611164600283611731565b8051600760f91b906004908390859081106111ca576111ca611674565b01602001516001600160f81b031990811690911c16036111ef57611164600383611731565b8051600f60f91b9060039083908590811061120c5761120c611674565b01602001516001600160f81b031990811690911c160361123157611164600483611731565b61123c600183611731565b91505b82611249816116d2565b935050611120565b5050919050565b60006020828403121561126a57600080fd5b5035919050565b60005b8381101561128c578181015183820152602001611274565b50506000910152565b60208152600082518060208401526112b4816040850160208701611271565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611300576113006112c8565b60405290565b604080519081016001600160401b0381118282101715611300576113006112c8565b604051601f8201601f191681016001600160401b0381118282101715611350576113506112c8565b604052919050565b60006001600160401b03821115611371576113716112c8565b50601f01601f191660200190565b600061139261138d84611358565b611328565b90508281528383830111156113a657600080fd5b828260208301376000602084830101529392505050565b600082601f8301126113ce57600080fd5b6108988383356020850161137f565b6000806000606084860312156113f257600080fd5b83356001600160401b0381111561140857600080fd5b611414868287016113bd565b9660208601359650604090950135949350505050565b6000806040838503121561143d57600080fd5b82356001600160401b038082111561145457600080fd5b611460868387016113bd565b9350602085013591508082111561147657600080fd5b50611483858286016113bd565b9150509250929050565b600080600080606085870312156114a357600080fd5b84356001600160401b03808211156114ba57600080fd5b818701915087601f8301126114ce57600080fd5b8135818111156114dd57600080fd5b8860208285010111156114ef57600080fd5b6020928301999098509187013596604001359550909350505050565b6001600160a01b038116811461152057600080fd5b50565b803561152e8161150b565b919050565b60008060008084860361014081121561154b57600080fd5b853594506020808701356001600160401b038082111561156a57600080fd5b818901915089601f83011261157e57600080fd5b61158c8a833585850161137f565b965060e0603f19850112156115a057600080fd5b6115a86112de565b9350604089013591506115ba8261150b565b81845289607f8a01126115cc57600080fd5b6115d4611306565b91508160a08a018b8111156115e857600080fd5b60608b015b8181101561160d5780356116008161150b565b85529385019385016115ed565b50818587015261161c81611523565b6040870152505060c0890135606085015260e0890135608085015261010089013560a0850152929450610120880135928084111561165957600080fd5b505050611668878288016113bd565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036116b6576116b661168a565b60010192915050565b818103818111156109bf576109bf61168a565b6000600182016116e4576116e461168a565b5060010190565b600082516116fd818460208701611271565b9190910192915050565b6000808585111561171757600080fd5b8386111561172457600080fd5b5050820193919092039150565b808201808211156109bf576109bf61168a565b60006020828403121561175657600080fd5b81516108988161150b565b60006020828403121561177357600080fd5b5051919050565b600082601f83011261178b57600080fd5b815161179961138d82611358565b8181528460208386010111156117ae57600080fd5b610a0b826020830160208701611271565b6000602082840312156117d157600080fd5b81516001600160401b038111156117e757600080fd5b610a0b8482850161177a565b6000806040838503121561180657600080fd5b82516001600160401b038082111561181d57600080fd5b6118298683870161177a565b9350602085015191508082111561183f57600080fd5b506114838582860161177a56fea26469706673582212206ae7615fb96283ed558d1e61a5d6002e2f43206d814e5381531b196f88518f9264736f6c63430008130033";

type SnippetsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnippetsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Snippets__factory extends ContractFactory {
  constructor(...args: SnippetsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Snippets> {
    return super.deploy(overrides || {}) as Promise<Snippets>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Snippets {
    return super.attach(address) as Snippets;
  }
  override connect(signer: Signer): Snippets__factory {
    return super.connect(signer) as Snippets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnippetsInterface {
    return new utils.Interface(_abi) as SnippetsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Snippets {
    return new Contract(address, _abi, signerOrProvider) as Snippets;
  }
}
